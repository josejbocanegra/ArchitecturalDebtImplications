Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The method has 160 lines of code.
Long Parameter List,Ocelot.UnitTests.Eureka,EurekaService,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,EurekaService,The method has 6 parameters. Parameters: serviceId' host' port' isSecure' uri' metadata
Long Parameter List,Ocelot.UnitTests.Request.Mapper,RequestMapperTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Request\Mapper\RequestMapperTests.cs,Should_map_valid_request_uri,The method has 5 parameters. Parameters: scheme' host' path' queryString' expectedUri
Long Identifier,Ocelot.UnitTests.Authorization,AuthorizationMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Authorization\AuthorizationMiddlewareTests.cs,GivenTheDownStreamRouteIs,The length of the parameter templatePlaceholderNameAndValues is 32.
Long Identifier,Ocelot.UnitTests.Authorization,ClaimsAuthorizerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Authorization\ClaimsAuthorizerTests.cs,GivenAPlaceHolderNameAndValueList,The length of the parameter urlPathPlaceholderNameAndValues is 31.
Long Identifier,Ocelot.UnitTests.Authorization,ClaimsAuthorizerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Authorization\ClaimsAuthorizerTests.cs,,The length of the parameter _urlPathPlaceholderNameAndValues is 32.
Long Identifier,Ocelot.UnitTests.Configuration,ClaimToThingConfigurationParserTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\ClaimToThingConfigurationParserTests.cs,,The length of the parameter _claimToThingConfigurationParser is 32.
Long Identifier,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,,The length of the parameter _fakeConsulServiceDiscoveryUrl is 30.
Long Identifier,Ocelot.UnitTests.Consul,PollingConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\PollingConsulServiceDiscoveryProviderTests.cs,,The length of the parameter _consulServiceDiscoveryProvider is 31.
Long Identifier,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,should_match_path_with_no_query_string,The length of the parameter regExForwardSlashAndOnePlaceHolder is 34.
Long Identifier,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,should_match_query_string,The length of the parameter regExForwardSlashAndOnePlaceHolder is 34.
Long Identifier,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,should_match_query_string_with_multiple_params,The length of the parameter regExForwardSlashAndOnePlaceHolder is 34.
Long Identifier,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,should_not_match_slash_becaue_we_need_to_match_something_after_it,The length of the parameter regExForwardSlashAndOnePlaceHolder is 34.
Long Identifier,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,,The length of the parameter _downstreamUrlTemplateVariableReplacer is 38.
Long Statement,Ocelot.UnitTests.CacheManager,OutputCacheMiddlewareRealCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\CacheManager\OutputCacheMiddlewareRealCacheTests.cs,should_cache_content_headers,The length of the statement  "            var response = new DownstreamResponse(content' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "fooreason"); " is 134.
Long Statement,Ocelot.UnitTests.Cache,OutputCacheMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\OutputCacheMiddlewareTests.cs,should_returned_cached_item_when_it_is_in_cache_expires_header,The length of the statement  "            var cachedResponse = new CachedResponse(HttpStatusCode.OK' new Dictionary<string' IEnumerable<string>>()' ""' contentHeaders' "some reason");" is 141.
Long Statement,Ocelot.UnitTests.Cache,OutputCacheMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\OutputCacheMiddlewareTests.cs,GivenTheDownstreamRouteIs,The length of the statement  "            var downstreamRoute = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<PlaceholderNameAndValue>()' route);" is 121.
Long Statement,Ocelot.UnitTests.Cache,OutputCacheMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\OutputCacheMiddlewareTests.cs,ThenTheCacheAddIsCalledCorrectly,The length of the statement  "                .Verify(x => x.Add(It.IsAny<string>()' It.IsAny<CachedResponse>()' It.IsAny<TimeSpan>()' It.IsAny<string>())' Times.Once);" is 122.
Long Statement,Ocelot.UnitTests.Configuration,ConfigurationCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\ConfigurationCreatorTests.cs,WhenICreate,The length of the statement  "            _creator = new ConfigurationCreator(_spcCreator.Object' _qosCreator.Object' _hhoCreator.Object' serviceProvider' _lboCreator.Object' _vCreator.Object); " is 151.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheConfigurationIsStoredAs,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Scheme.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Scheme); " is 132.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheConfigurationIsStoredAs,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Host.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Host); " is 128.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheConfigurationIsStoredAs,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Port.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Port); " is 128.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,GivenTheConfigurationIs,The length of the statement  "            _environmentSpecificPath = $"{AppContext.BaseDirectory}/ocelot{(string.IsNullOrEmpty(_environmentName) ? string.Empty : ".")}{_environmentName}.json"; " is 150.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheConfigurationJsonIsIndented,The length of the statement  "            var path = !string.IsNullOrEmpty(_environmentSpecificPath) ? _environmentSpecificPath : _environmentSpecificPath = $"{AppContext.BaseDirectory}/ocelot{(string.IsNullOrEmpty(_environmentName) ? string.Empty : ".")}{_environmentName}.json"; " is 238.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheFollowingIsReturned,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Scheme.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Scheme); " is 132.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheFollowingIsReturned,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Host.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Host); " is 128.
Long Statement,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,ThenTheFollowingIsReturned,The length of the statement  "            _result.GlobalConfiguration.ServiceDiscoveryProvider.Port.ShouldBe(expecteds.GlobalConfiguration.ServiceDiscoveryProvider.Port); " is 128.
Long Statement,Ocelot.UnitTests.Configuration,FileConfigurationSetterTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileConfigurationSetterTests.cs,should_set_configuration,The length of the statement  "            var config = new InternalConfiguration(new List<Route>()' string.Empty' serviceProviderConfig' "asdf"' new LoadBalancerOptionsBuilder().Build()' ""' new QoSOptionsBuilder().Build()' new HttpHandlerOptionsBuilder().Build()' new Version("1.1")); " is 243.
Long Statement,Ocelot.UnitTests.Configuration,FileInternalConfigurationCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileInternalConfigurationCreatorTests.cs,ThenTheDependenciesAreCalledCorrectly,The length of the statement  "            _configCreator.Verify(x => x.Create(_fileConfiguration' It.Is<List<Route>>(y => y.Count == mergedRoutes.Count))' Times.Once); " is 125.
Long Statement,Ocelot.UnitTests.Configuration,HeaderFindAndReplaceCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HeaderFindAndReplaceCreatorTests.cs,should_log_errors_and_not_add_headers,The length of the statement  "                .And(x => ThenTheLoggerIsCalledCorrectly("Unable to add DownstreamHeaderTransform Location: http://www.bbc.co.uk/' {BaseUrl}")) " is 127.
Long Statement,Ocelot.UnitTests.Configuration,HeaderFindAndReplaceCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HeaderFindAndReplaceCreatorTests.cs,should_log_errors_and_not_add_headers,The length of the statement  "                .And(x => ThenTheLoggerIsCalledCorrectly("Unable to add UpstreamHeaderTransform Location: http://www.bbc.co.uk/' {BaseUrl}")) " is 125.
Long Statement,Ocelot.UnitTests.Configuration,RateLimitOptionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RateLimitOptionsCreatorTests.cs,ThenTheFollowingIsReturned,The length of the statement  "            TimeSpan.FromSeconds(_result.RateLimitRule.PeriodTimespan).Ticks.ShouldBe(TimeSpan.FromSeconds(expected.RateLimitRule.PeriodTimespan).Ticks); " is 141.
Long Statement,Ocelot.UnitTests.Configuration,RouteKeyCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RouteKeyCreatorTests.cs,should_return_re_route_key,The length of the statement  "                .Then(_ => ThenTheResultIs($"{route.UpstreamPathTemplate}|{string.Join("'"' route.UpstreamHttpMethod)}|{string.Join("'"' route.DownstreamHostAndPorts.Select(x => $"{x.Host}:{x.Port}"))}")) " is 188.
Long Statement,Ocelot.UnitTests.Configuration,RoutesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RoutesCreatorTests.cs,GivenTheDependenciesAreSetUpCorrectly,The length of the statement  "            _ht = new HeaderTransformations(new List<HeaderFindAndReplace>()' new List<HeaderFindAndReplace>()' new List<AddHeader>()' new List<AddHeader>()); " is 146.
Long Statement,Ocelot.UnitTests.Configuration,RoutesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RoutesCreatorTests.cs,GivenTheDependenciesAreSetUpCorrectly,The length of the statement  "            _qosoCreator.Setup(x => x.Create(It.IsAny<FileQoSOptions>()' It.IsAny<string>()' It.IsAny<List<string>>())).Returns(_qoso); " is 123.
Long Statement,Ocelot.UnitTests.Configuration,RoutesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RoutesCreatorTests.cs,ThenTheRouteIsSet,The length of the statement  "            _result[routeIndex].DownstreamRoute[0].DangerousAcceptAnyServerCertificateValidator.ShouldBe(expected.DangerousAcceptAnyServerCertificateValidator); " is 148.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_but_no_service_discovery_handler,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Unable to start Ocelot' errors are: Unable to start Ocelot because either a Route or GlobalConfiguration are using ServiceDiscoveryOptions but no ServiceDiscoveryFinderDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Consul and services.AddConsul() or Ocelot.Provider.Eureka and services.AddEureka()?")) " is 413.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_dynamically_but_service_discovery_handler,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Unable to start Ocelot' errors are: Unable to start Ocelot because either a Route or GlobalConfiguration are using ServiceDiscoveryOptions but no ServiceDiscoveryFinderDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Consul and services.AddConsul() or Ocelot.Provider.Eureka and services.AddEureka()?")) " is 413.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_but_no_service_discovery_handler_with_matching_name,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Unable to start Ocelot' errors are: Unable to start Ocelot because either a Route or GlobalConfiguration are using ServiceDiscoveryOptions but no ServiceDiscoveryFinderDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Consul and services.AddConsul() or Ocelot.Provider.Eureka and services.AddEureka()?")) " is 413.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_qos_options_specified_but_no_qos_handler,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Unable to start Ocelot because either a Route or GlobalConfiguration are using QoSOptions but no QosDelegatingHandlerDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Polly and services.AddPolly()?")) " is 309.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_qos_options_specified_globally_but_no_qos_handler,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Unable to start Ocelot because either a Route or GlobalConfiguration are using QoSOptions but no QosDelegatingHandlerDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Polly and services.AddPolly()?")) " is 309.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_re_routes_dont_exist_for_aggregate,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Routes for aggregateRoute / either do not exist or do not have correct ServiceName property")) " is 142.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregate_has_re_routes_with_specific_request_id_keys,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "aggregateRoute / contains Route with specific RequestIdKey' this is not possible with Aggregates")) " is 147.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} doesnt start with forward slash")) " is 153.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(1' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 254.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(2' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains scheme")) " is 137.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(3' "Upstream Path Template http://asdf.com contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 222.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(4' "Upstream Path Template http://asdf.com doesnt start with forward slash")) " is 121.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_without_slash_prefix_downstream_path_template,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template api/products/ doesnt start with forward slash")) " is 121.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_upstream_url_contains_forward_slash_then_another_forward_slash,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Upstream Path Template //api/prod/ contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 218.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_downstream_url_contains_forward_slash_then_another_forward_slash,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template //api/products/ contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 224.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_with_invalid_authentication_provider,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Authentication Options AuthenticationProviderKey:Test'AllowedScopes:[] is unsupported authentication provider")) " is 160.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_with_invalid_rate_limit_configuration,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "RateLimitOptions.Period does not contain integer then s (second)' m (minute)' h (hour)' d (day) e.g. 1m for 1 minute period")) " is 174.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_when_not_using_service_discovery_and_host,The length of the statement  "                .And(x => x.ThenTheErrorMessageAtPositionIs(0' "When not using service discovery Host must be set on DownstreamHostAndPorts if you are not using Route.Host or Ocelot cannot find your service!")) " is 194.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_not_valid_when_no_host_and_port,The length of the statement  "                 .And(x => x.ThenTheErrorMessageAtPositionIs(0' "When not using service discovery DownstreamHostAndPorts must be set and not empty or Ocelot cannot find your service!")) " is 168.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_not_valid_when_host_and_port_is_empty,The length of the statement  "                 .And(x => x.ThenTheErrorMessageAtPositionIs(0' "When not using service discovery Host must be set on DownstreamHostAndPorts if you are not using Route.Host or Ocelot cannot find your service!")) " is 194.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,GivenAQoSHandler,The length of the statement  "            _configurationValidator = new FileConfigurationFluentValidator(provider' new RouteFluentValidator(_authProvider.Object' new HostAndPortValidator()' new FileQoSOptionsFluentValidator(provider))' new FileGlobalConfigurationFluentValidator(new FileQoSOptionsFluentValidator(provider))); " is 283.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,GivenAServiceDiscoveryHandler,The length of the statement  "            _configurationValidator = new FileConfigurationFluentValidator(provider' new RouteFluentValidator(_authProvider.Object' new HostAndPortValidator()' new FileQoSOptionsFluentValidator(provider))' new FileGlobalConfigurationFluentValidator(new FileQoSOptionsFluentValidator(provider))); " is 283.
Long Statement,Ocelot.UnitTests.Configuration.Validation,TestHandler,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,HandleAuthenticateAsync,The length of the statement  "                return Task.FromResult(AuthenticateResult.Success(new AuthenticationTicket(principal' new AuthenticationProperties()' Scheme.Name))); " is 133.
Long Statement,Ocelot.UnitTests.Configuration.Validation,FileQoSOptionsFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileQoSOptionsFluentValidatorTests.cs,ThenTheErrorIs,The length of the statement  "            _result.Errors[0].ErrorMessage.ShouldBe("Unable to start Ocelot because either a Route or GlobalConfiguration are using QoSOptions but no QosDelegatingHandlerDelegate has been registered in dependency injection container. Are you missing a package like Ocelot.Provider.Polly and services.AddPolly()?"); " is 302.
Long Statement,Ocelot.UnitTests.Configuration.Validation,HostAndPortValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\HostAndPortValidatorTests.cs,ThenTheErorrIs,The length of the statement  "            _result.Errors[0].ErrorMessage.ShouldBe("When not using service discovery Host must be set on DownstreamHostAndPorts if you are not using Route.Host or Ocelot cannot find your service!"); " is 187.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,downstream_path_template_should_not_contain_double_forward_slash,The length of the statement  "                .And(_ => ThenTheErrorsContains("Downstream Path Template //test contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 200.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,downstream_path_template_should_not_contain_scheme,The length of the statement  "                .And(_ => ThenTheErrorsContains($"Downstream Path Template {downstreamPathTemplate} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 219.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,upstream_path_template_should_not_contain_double_forward_slash,The length of the statement  "                .And(_ => ThenTheErrorsContains("Upstream Path Template //test contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 198.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,upstream_path_template_should_not_contain_scheme,The length of the statement  "                .And(_ => ThenTheErrorsContains($"Upstream Path Template {upstreamPathTemplate} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature.")) " is 215.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_not_be_valid_if_enable_rate_limiting_true_and_period_has_value,The length of the statement  "                .And(_ => ThenTheErrorsContains("RateLimitOptions.Period does not contain integer then s (second)' m (minute)' h (hour)' d (day) e.g. 1m for 1 minute period")) " is 159.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_not_be_valid_if_specified_authentication_provider_isnt_registered,The length of the statement  "                .And(_ => ThenTheErrorsContains($"Authentication Options AuthenticationProviderKey:JwtLads'AllowedScopes:[] is unsupported authentication provider")) " is 149.
Long Statement,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_not_be_valid_if_not_using_service_discovery_and_no_host_and_ports,The length of the statement  "                .And(_ => ThenTheErrorsContains("When not using service discovery DownstreamHostAndPorts must be set and not empty or Ocelot cannot find your service!")) " is 153.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForInvalidAddress,The length of the statement  "                    "Unable to use service Address: http://localhost and Port: 50881 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 163.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForInvalidAddress,The length of the statement  "                    "Unable to use service Address: http://localhost and Port: 50888 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 163.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForEmptyAddress,The length of the statement  "                    "Unable to use service Address:  and Port: 50881 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 147.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForEmptyAddress,The length of the statement  "                    "Unable to use service Address:  and Port: 50888 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 147.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForInvalidPorts,The length of the statement  "                    "Unable to use service Address: localhost and Port: -1 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 153.
Long Statement,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ThenTheLoggerHasBeenCalledCorrectlyForInvalidPorts,The length of the statement  "                    "Unable to use service Address: localhost and Port: 0 as it is invalid. Address must contain host only e.g. localhost and port must be greater than 0")'" is 152.
Long Statement,Ocelot.UnitTests.Consul,ProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ProviderFactoryTests.cs,should_return_PollingConsulServiceDiscoveryProvider,The length of the statement  "            var provider = ConsulProviderFactory.Get(_provider' new ServiceProviderConfiguration("pollconsul"' "http"' ""' 1' ""' ""' stopsPollerFromPolling)' route); " is 154.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.RateLimitOptions.ClientIdHeader.ShouldBe(_globalConfig.GlobalConfiguration.RateLimitOptions.ClientIdHeader); " is 131.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.RateLimitOptions.DisableRateLimitHeaders.ShouldBe(_globalConfig.GlobalConfiguration.RateLimitOptions.DisableRateLimitHeaders); " is 149.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.RateLimitOptions.HttpStatusCode.ShouldBe(_globalConfig.GlobalConfiguration.RateLimitOptions.HttpStatusCode); " is 131.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.RateLimitOptions.QuotaExceededMessage.ShouldBe(_globalConfig.GlobalConfiguration.RateLimitOptions.QuotaExceededMessage); " is 143.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.RateLimitOptions.RateLimitCounterPrefix.ShouldBe(_globalConfig.GlobalConfiguration.RateLimitOptions.RateLimitCounterPrefix); " is 147.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.ServiceDiscoveryProvider.Scheme.ShouldBe(_globalConfig.GlobalConfiguration.ServiceDiscoveryProvider.Scheme); " is 131.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.ServiceDiscoveryProvider.Host.ShouldBe(_globalConfig.GlobalConfiguration.ServiceDiscoveryProvider.Host); " is 127.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.ServiceDiscoveryProvider.Port.ShouldBe(_globalConfig.GlobalConfiguration.ServiceDiscoveryProvider.Port); " is 127.
Long Statement,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,ThenTheConfigsAreMerged,The length of the statement  "            fc.GlobalConfiguration.ServiceDiscoveryProvider.Type.ShouldBe(_globalConfig.GlobalConfiguration.ServiceDiscoveryProvider.Type); " is 127.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_rate_limit_options,The length of the statement  "            var configuration = new InternalConfiguration(routes' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 174.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_cache_downstream_route,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_not_cache_downstream_route,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_no_path,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_only_first_segment_no_traling_slash,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_segments_no_traling_slash,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_and_remove_query_string,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_for_sticky_sessions,The length of the statement  "            var loadBalancerOptions = new LoadBalancerOptionsBuilder().WithType(nameof(CookieStickySessions)).WithKey("boom").WithExpiryInMs(1).Build(); " is 140.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_for_sticky_sessions,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 171.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_qos,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' qoSOptions' _handlerOptions' new Version("1.1")); " is 171.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,should_create_downstream_route_with_handler_options,The length of the statement  "            var configuration = new InternalConfiguration(null' "doesnt matter"' null' "doesnt matter"' _loadBalancerOptions' "http"' _qoSOptions' _handlerOptions' new Version("1.1")); " is 172.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,ThenTheDownstreamRouteIsCreated,The length of the statement  "            _result.Data.Route.DownstreamRoute[0].LoadBalancerOptions.Type.ShouldBe(nameof(Ocelot.LoadBalancer.LoadBalancers.NoLoadBalancer)); " is 130.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,ThenTheStickySessionLoadBalancerIsUsed,The length of the statement  "            _result.Data.Route.DownstreamRoute[0].LoadBalancerKey.ShouldBe($"{nameof(Ocelot.LoadBalancer.LoadBalancers.CookieStickySessions)}:boom"); " is 137.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteCreatorTests.cs,ThenTheStickySessionLoadBalancerIsUsed,The length of the statement  "            _result.Data.Route.DownstreamRoute[0].LoadBalancerOptions.Type.ShouldBe(nameof(Ocelot.LoadBalancer.LoadBalancers.CookieStickySessions)); " is 136.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderMiddlewareTests.cs,should_call_scoped_data_repository_correctly,The length of the statement  "            var config = new InternalConfiguration(null' null' new ServiceProviderConfigurationBuilder().Build()' ""' new LoadBalancerOptionsBuilder().Build()' ""' new QoSOptionsBuilder().Build()' new HttpHandlerOptionsBuilder().Build()' new Version("1.1"));" is 246.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderMiddlewareTests.cs,GivenTheDownStreamRouteFinderReturns,The length of the statement  "                .Setup(x => x.Get(It.IsAny<string>()' It.IsAny<string>()' It.IsAny<string>()' It.IsAny<IInternalConfiguration>()' It.IsAny<string>()))" is 134.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderMiddlewareTests.cs,ThenTheScopedDataRepositoryIsCalledCorrectly,The length of the statement  "            _httpContext.Items.IInternalConfiguration().ServiceProviderConfiguration.ShouldBe(_config.ServiceProviderConfiguration);" is 120.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,should_not_return_route_when_host_doesnt_match,The length of the statement  "                .And(x => x.GivenTheTemplateVariableAndNameFinderReturns(new OkResponse<List<PlaceholderNameAndValue>>(new List<PlaceholderNameAndValue>()))) " is 141.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,should_not_return_route_when_host_doesnt_match_with_empty_upstream_http_method,The length of the statement  "                .And(x => x.GivenTheTemplateVariableAndNameFinderReturns(new OkResponse<List<PlaceholderNameAndValue>>(new List<PlaceholderNameAndValue>()))) " is 141.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,should_return_route_when_host_does_match_with_empty_upstream_http_method,The length of the statement  "                .And(x => x.GivenTheTemplateVariableAndNameFinderReturns(new OkResponse<List<PlaceholderNameAndValue>>(new List<PlaceholderNameAndValue>()))) " is 141.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,ThenTheUrlMatcherIsCalledCorrectly,The length of the statement  "                .Verify(x => x.Match(_upstreamUrlPath' _upstreamQuery' _routesConfig[index].UpstreamTemplatePattern)' Times.Exactly(times)); " is 124.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,GivenTheConfigurationIs,The length of the statement  "            _config = new InternalConfiguration(_routesConfig' adminPath' serviceProviderConfig' ""' new LoadBalancerOptionsBuilder().Build()' ""' new QoSOptionsBuilder().Build()' new HttpHandlerOptionsBuilder().Build()' new Version("1.1")); " is 229.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteFinderTests.cs,ThenTheFollowingIsReturned,The length of the statement  "            _result.Data.Route.DownstreamRoute[0].DownstreamPathTemplate.Value.ShouldBe(expected.Route.DownstreamRoute[0].DownstreamPathTemplate.Value); " is 140.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_when_not_dynamic_re_route_and_service_discovery_on,The length of the statement  "            var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build(); " is 131.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_when_not_dynamic_re_route_and_service_discovery_on,The length of the statement  "                new RouteBuilder().WithUpstreamPathTemplate(new UpstreamPathTemplateBuilder().WithOriginalValue("woot").Build()).Build() " is 120.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_given_no_service_discovery_type,The length of the statement  "            var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("localhost").WithPort(50).WithType("").Build(); " is 132.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_creator,The length of the statement  "            var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build(); " is 131.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_creator_with_dynamic_re_route,The length of the statement  "            var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build(); " is 131.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,GivenTheRoutes,The length of the statement  "            _config = new InternalConfiguration(routes' ""' null' ""' new LoadBalancerOptionsBuilder().Build()' ""' new QoSOptionsBuilder().Build()' new HttpHandlerOptionsBuilder().Build()' new Version("1.1")); " is 198.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,GivenTheRoutes,The length of the statement  "            _config = new InternalConfiguration(routes' ""' config' ""' new LoadBalancerOptionsBuilder().Build()' ""' new QoSOptionsBuilder().Build()' new HttpHandlerOptionsBuilder().Build()' new Version("1.1")); " is 200.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,should_match_path_with_no_query_string,The length of the statement  "                .And(_ => GivenIHaveAQueryString("?DeviceType=IphoneApp&Browser=moonpigIphone&BrowserString=-&CountryCode=123&DeviceName=iPhone 5 (GSM+CDMA)&OperatingSystem=iPhone OS 7.1.2&BrowserVersion=3708AdHoc&ipAddress=-"))" is 212.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,RegExUrlMatcherTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\RegExUrlMatcherTests.cs,WhenIMatchThePaths,The length of the statement  "            _result = _urlMatcher.Match(_path' _queryString' new UpstreamPathTemplate(_downstreamPathTemplate' 0' _containsQueryString' _downstreamPathTemplate));" is 150.
Long Statement,Ocelot.UnitTests.DownstreamRouteFinder.UrlMatcher,UrlPathPlaceholderNameAndValueFinderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\UrlMatcher\UrlPathPlaceholderNameAndValueFinderTests.cs,can_match_down_stream_url_with_downstream_template_with_three_place_holders_seperated_by_something,The length of the statement  "                .And(x => x.GivenIHaveAnUpstreamUrlTemplate("api/product/products/{productId}/categories/{categoryId}/variant/{variantId}"))" is 124.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url_with_query_string_for_stateful_service,The length of the statement  "                .Then(x => x.ThenTheDownstreamRequestUriIs("http://localhost:19081/Ocelot/OcelotApp/api/products/1?PartitionKind=test&PartitionKey=1"))" is 135.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url_with_version_from_upstream_path_template,The length of the statement  "                .Then(x => x.ThenTheDownstreamRequestUriIs("http://localhost:19081/Service_1.0/Api/products?PartitionKind=test&PartitionKey=1"))" is 128.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,issue_473_should_not_remove_additional_query_string,The length of the statement  "                .WithUpstreamPathTemplate(new UpstreamPathTemplateBuilder().WithOriginalValue("/uc/Authorized/{server}/{action}").Build())" is 122.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,issue_473_should_not_remove_additional_query_string,The length of the statement  "                .And(x => x.GivenTheDownstreamRequestUriIs("http://localhost:5000/uc/Authorized/2/1/refresh?refreshToken=2288356cfb1338fdc5ff4ca558ec785118dfe1ff2864340937da8226863ff66d"))" is 172.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,issue_473_should_not_remove_additional_query_string,The length of the statement  "                .Then(x => x.ThenTheDownstreamRequestUriIs("http://localhost:5000/Authorized/1?refreshToken=2288356cfb1338fdc5ff4ca558ec785118dfe1ff2864340937da8226863ff66d&server=2"))" is 168.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,issue_473_should_not_remove_additional_query_string,The length of the statement  "                .And(x => ThenTheQueryStringIs("?refreshToken=2288356cfb1338fdc5ff4ca558ec785118dfe1ff2864340937da8226863ff66d&server=2"))" is 122.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_not_replace_by_empty_scheme,The length of the statement  "                .Then(x => x.ThenTheDownstreamRequestUriIs("https://localhost:19081/Ocelot/OcelotApp/api/products/1?PartitionKind=test&PartitionKey=1"))" is 136.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,WhenICallTheMiddleware,The length of the statement  "            _middleware = new DownstreamUrlCreatorMiddleware(_next' _loggerFactory.Object' _downstreamUrlTemplateVariableReplacer.Object);" is 126.
Long Statement,Ocelot.UnitTests.DownstreamUrlCreator.UrlTemplateReplacer,UpstreamUrlPathTemplateVariableReplacerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\UrlTemplateReplacer\UpstreamUrlPathTemplateVariableReplacerTests.cs,WhenIReplaceTheTemplateVariables,The length of the statement  "            _result = _downstreamPathReplacer.Replace(_downstreamRoute.Route.DownstreamRoute[0].DownstreamPathTemplate.Value' _downstreamRoute.TemplatePlaceholderNameAndValues);" is 165.
Long Statement,Ocelot.UnitTests.Eureka,EurekaMiddlewareConfigurationProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaMiddlewareConfigurationProviderTests.cs,should_not_build,The length of the statement  "                .Returns(new OkResponse<IInternalConfiguration>(new InternalConfiguration(null' null' null' null' null' null' null' null' null)));" is 130.
Long Statement,Ocelot.UnitTests.Eureka,EurekaMiddlewareConfigurationProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaMiddlewareConfigurationProviderTests.cs,should_build,The length of the statement  "                .Returns(new OkResponse<IInternalConfiguration>(new InternalConfiguration(null' null' serviceProviderConfig' null' null' null' null' null' null)));" is 147.
Long Statement,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,should_return_services_from_client,The length of the statement  "                new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())' " is 120.
Long Statement,Ocelot.UnitTests.Headers,HttpHeadersTransformationMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Headers\HttpHeadersTransformationMiddlewareTests.cs,ThenAddHeadersToResponseIsCalledCorrectly,The length of the statement  "                .Verify(x => x.Add(_httpContext.Items.DownstreamRoute().AddHeadersToDownstream' _httpContext.Items.DownstreamResponse())' Times.Once);" is 134.
Long Statement,Ocelot.UnitTests.Headers,HttpHeadersTransformationMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Headers\HttpHeadersTransformationMiddlewareTests.cs,ThenAddHeadersToRequestIsCalledCorrectly,The length of the statement  "                .Verify(x => x.SetHeadersOnDownstreamRequest(_httpContext.Items.DownstreamRoute().AddHeadersToUpstream' _httpContext)' Times.Once);" is 131.
Long Statement,Ocelot.UnitTests.Headers,HttpHeadersTransformationMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Headers\HttpHeadersTransformationMiddlewareTests.cs,GivenTheDownstreamRequestIs,The length of the statement  "            _httpContext.Items.UpsertDownstreamRequest(new DownstreamRequest(new HttpRequestMessage(HttpMethod.Get' "http://test.com")));" is 125.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerFactoryTests.cs,ThenTheErrorMessageIsCorrect,The length of the statement  "            _result.Errors[0].Message.ShouldBe("Could not find load balancer creator for Type: DoesntExistLoadBalancer' please check your config specified the correct load balancer and that you have registered a class with the same name.");" is 228.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerHouseTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerHouseTests.cs,WhenIGetTheRouteWithTheSameKeyButDifferentLoadBalancer,The length of the statement  "            _factory.Setup(x => x.Get(_route' _serviceProviderConfig)).Returns(new OkResponse<ILoadBalancer>(new LeastConnection(null' null)));" is 131.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,should_call_scoped_data_repository_correctly,The length of the statement  "                .And(x => x.GivenTheDownStreamRouteIs(downstreamRoute' new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()))" is 132.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,should_set_pipeline_error_if_cannot_get_load_balancer,The length of the statement  "                .And(x => x.GivenTheDownStreamRouteIs(downstreamRoute' new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()))" is 132.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,should_set_pipeline_error_if_cannot_get_least,The length of the statement  "                .And(x => x.GivenTheDownStreamRouteIs(downstreamRoute' new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()))" is 132.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,should_set_scheme,The length of the statement  "                .And(x => x.GivenTheDownStreamRouteIs(downstreamRoute' new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()))" is 132.
Long Statement,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,GivenTheLoadBalancerReturnsAnError,The length of the statement  "            _getHostAndPortError = new ErrorResponse<ServiceHostAndPort>(new List<Error>() { new ServicesAreNullError($"services were null for bah") });" is 140.
Long Statement,Ocelot.UnitTests.Logging,AspDotNetLoggerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Logging\AspDotNetLoggerTests.cs,should_log_trace,The length of the statement  "            ThenLevelIsLogged("requestId: no request id' previousRequestId: no previous request id' message: a message from tom to laura"' LogLevel.Trace);" is 143.
Long Statement,Ocelot.UnitTests.Logging,AspDotNetLoggerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Logging\AspDotNetLoggerTests.cs,should_log_info,The length of the statement  "            ThenLevelIsLogged("requestId: no request id' previousRequestId: no previous request id' message: a message from tom to laura"' LogLevel.Information);" is 149.
Long Statement,Ocelot.UnitTests.Logging,AspDotNetLoggerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Logging\AspDotNetLoggerTests.cs,should_log_warning,The length of the statement  "            ThenLevelIsLogged("requestId: no request id' previousRequestId: no previous request id' message: a message from tom to laura"' LogLevel.Warning);" is 145.
Long Statement,Ocelot.UnitTests.Logging,AspDotNetLoggerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Logging\AspDotNetLoggerTests.cs,should_log_error,The length of the statement  "            ThenLevelIsLogged("requestId: no request id' previousRequestId: no previous request id' message: a message from tom to laura"' LogLevel.Error' _ex);" is 148.
Long Statement,Ocelot.UnitTests.Logging,AspDotNetLoggerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Logging\AspDotNetLoggerTests.cs,should_log_critical,The length of the statement  "            ThenLevelIsLogged("requestId: no request id' previousRequestId: no previous request id' message: a message from tom to laura"' LogLevel.Critical' _ex);" is 151.
Long Statement,Ocelot.UnitTests.Multiplexing,MultiplexingMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\MultiplexingMiddlewareTests.cs,should_multiplex,The length of the statement  "            var route = new RouteBuilder().WithDownstreamRoute(new DownstreamRouteBuilder().Build()).WithDownstreamRoute(new DownstreamRouteBuilder().Build()).Build();" is 155.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context_withConfig,The length of the statement  "            var commentsResponseContent = @"[{""id"":1'""writerId"":1'""postId"":1'""text"":""text1""}'{""id"":2'""writerId"":2'""postId"":2'""text"":""text2""}'{""id"":3'""writerId"":2'""postId"":1'""text"":""text21""}]";" is 210.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context_withConfig,The length of the statement  "            commentsDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent(commentsResponseContent' Encoding.UTF8' "application/json")' HttpStatusCode.OK' new EditableList<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 257.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context_withConfig,The length of the statement  "            var userDetailsResponseContent = @"[{""id"":1'""firstName"":""abolfazl""'""lastName"":""rajabpour""}'{""id"":2'""firstName"":""reza""'""lastName"":""rezaei""}]";" is 161.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context_withConfig,The length of the statement  "            userDetailsDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent(userDetailsResponseContent' Encoding.UTF8' "application/json")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 255.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context,The length of the statement  "            billDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Bill says hi")' HttpStatusCode.OK' new EditableList<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 209.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_aggregate_n_responses_and_set_response_content_on_upstream_context,The length of the statement  "            georgeDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("George says hi")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 205.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_return_error_if_any_downstreams_have_errored,The length of the statement  "            billDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Bill says hi")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 201.
Long Statement,Ocelot.UnitTests.Multiplexing,SimpleJsonResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\SimpleJsonResponseAggregatorTests.cs,should_return_error_if_any_downstreams_have_errored,The length of the statement  "            georgeDownstreamContext.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Error")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 196.
Long Statement,Ocelot.UnitTests.Multiplexing,UserDefinedResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\UserDefinedResponseAggregatorTests.cs,should_call_aggregator,The length of the statement  "            contextA.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Tom")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 179.
Long Statement,Ocelot.UnitTests.Multiplexing,UserDefinedResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\UserDefinedResponseAggregatorTests.cs,should_call_aggregator,The length of the statement  "            contextB.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Laura")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 181.
Long Statement,Ocelot.UnitTests.Multiplexing,UserDefinedResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\UserDefinedResponseAggregatorTests.cs,should_not_find_aggregator,The length of the statement  "            contextA.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Tom")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 179.
Long Statement,Ocelot.UnitTests.Multiplexing,UserDefinedResponseAggregatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\UserDefinedResponseAggregatorTests.cs,should_not_find_aggregator,The length of the statement  "            contextB.Items.UpsertDownstreamResponse(new DownstreamResponse(new StringContent("Laura")' HttpStatusCode.OK' new List<KeyValuePair<string' IEnumerable<string>>>()' "some reason"));" is 181.
Long Statement,Ocelot.UnitTests.QueryStrings,AddQueriesToRequestTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\QueryStrings\AddQueriesToRequestTests.cs,ThenTheQueryIsAdded,The length of the statement  "            var queries = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(_downstreamRequest.ToHttpRequestMessage().RequestUri.OriginalString);" is 141.
Long Statement,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The length of the statement  "                .WithRateLimitOptions(new RateLimitOptions(true' "ClientId"' () => new List<string>()' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))" is 140.
Long Statement,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The length of the statement  "            var downstreamRouteHolder = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()' route);" is 167.
Long Statement,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_withWhitelistClient,The length of the statement  "            var downstreamRoute = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()'" is 153.
Long Statement,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_withWhitelistClient,The length of the statement  "                             new Ocelot.Configuration.RateLimitOptions(true' "ClientId"' () => new List<string>() { "ocelotclient2" }' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))" is 159.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The length of the statement  "                .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>()) " is 122.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The length of the statement  "                .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>()) " is 122.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The length of the statement  "                .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>()) " is 122.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_and_only_add_specifics_in_config,The length of the statement  "                .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>()) " is 122.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,ThenTheWarningIsLogged,The length of the statement  "            _logger.Verify(x => x.LogWarning($"Route {_downstreamRoute.UpstreamPathTemplate} specifies use QoS but no QosHandler found in DI container. Will use not use a QosHandler' please check your setup!")' Times.Once); " is 211.
Long Statement,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,WhenIGet,The length of the statement  "            _factory = new DelegatingHandlerHandlerFactory(_tracingFactory.Object' _qosFactory.Object' _serviceProvider' _loggerFactory.Object); " is 132.
Long Statement,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,should_not_get_from_cache_with_different_query_string,The length of the statement  "                .WithUpstreamPathTemplate(new UpstreamPathTemplateBuilder().WithContainsQueryString(true).WithOriginalValue("").Build())" is 120.
Long Statement,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,should_not_get_from_cache_with_different_query_string,The length of the statement  "                .WithUpstreamPathTemplate(new UpstreamPathTemplateBuilder().WithContainsQueryString(true).WithOriginalValue("").Build())" is 120.
Long Statement,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,ThenTheDangerousAcceptAnyServerCertificateValidatorWarningIsLogged,The length of the statement  "            _logger.Verify(x => x.LogWarning($"You have ignored all SSL warnings by using DangerousAcceptAnyServerCertificateValidator for this DownstreamRoute' UpstreamPathTemplate: {_context.Items.DownstreamRoute().UpstreamPathTemplate}' DownstreamPathTemplate: {_context.Items.DownstreamRoute().DownstreamPathTemplate}")' Times.Once);" is 325.
Long Statement,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,GivenADownstreamService,The length of the statement  "                            if (context.Request.Cookies.TryGetValue("test"' out var cookieValue) || context.Request.Headers.TryGetValue("Set-Cookie"' out var headerValue))" is 143.
Long Statement,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,GivenARequestWithAUrlAndMethod,The length of the statement  "            _context.Items.UpsertDownstreamRequest(new DownstreamRequest(new HttpRequestMessage() { RequestUri = new Uri(url)' Method = method }));" is 135.
Long Statement,Ocelot.UnitTests.Requester,HttpClientHttpRequesterTest,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,should_call_request_correctly,The length of the statement  "            httpContext.Items.UpsertDownstreamRequest(new DownstreamRequest(new HttpRequestMessage() { RequestUri = new Uri("http://www.bbc.co.uk") })); " is 140.
Long Statement,Ocelot.UnitTests.Requester,HttpClientHttpRequesterTest,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,should_call_request_unable_to_complete_request,The length of the statement  "            httpContext.Items.UpsertDownstreamRequest(new DownstreamRequest(new HttpRequestMessage() { RequestUri = new Uri("http://localhost:60080") })); " is 142.
Long Statement,Ocelot.UnitTests.Requester,HttpClientHttpRequesterTest,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,http_client_request_times_out,The length of the statement  "            httpContext.Items.UpsertDownstreamRequest(new DownstreamRequest(new HttpRequestMessage() { RequestUri = new Uri("http://localhost:60080") })); " is 142.
Long Statement,Ocelot.UnitTests.Requester,HttpClientHttpRequesterTest,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,GivenTheHouseReturnsOkHandler,The length of the statement  "            _factory.Setup(x => x.Get(It.IsAny<DownstreamRoute>())).Returns(new OkResponse<List<Func<DelegatingHandler>>>(handlers)); " is 121.
Long Statement,Ocelot.UnitTests.Requester,HttpClientHttpRequesterTest,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,GivenTheHouseReturnsTimeoutHandler,The length of the statement  "            _factory.Setup(x => x.Get(It.IsAny<DownstreamRoute>())).Returns(new OkResponse<List<Func<DelegatingHandler>>>(handlers)); " is 121.
Long Statement,Ocelot.UnitTests.Requester,HttpRequesterMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpRequesterMiddlewareTests.cs,should_call_services_correctly,The length of the statement  "                .And(x => x.GivenTheRequesterReturns(new OkResponse<HttpResponseMessage>(new HttpResponseMessage(System.Net.HttpStatusCode.OK)))) " is 129.
Long Statement,Ocelot.UnitTests.Requester,QoSFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\QoSFactoryTests.cs,should_return_handler,The length of the statement  "            DelegatingHandler QosDelegatingHandlerDelegate(DownstreamRoute a' IOcelotLoggerFactory b) => new FakeDelegatingHandler(); " is 121.
Long Statement,Ocelot.UnitTests.Responder,ErrorsToHttpStatusCodeMapperTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Responder\ErrorsToHttpStatusCodeMapperTests.cs,check_we_have_considered_all_errors_in_these_tests,The length of the statement  "            Enum.GetNames(typeof(OcelotErrorCode)).Length.ShouldBe(41' "Looks like the number of error codes has changed. Do you need to modify ErrorsToHttpStatusCodeMapper?"); " is 164.
Long Statement,Ocelot.UnitTests.Security,IPSecurityPolicyTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Security\IPSecurityPolicyTests.cs,GivenSetAllowedIP,The length of the statement  "            _downstreamRouteBuilder.WithSecurityOptions(new SecurityOptions(new List<string> { "192.168.1.1" }' new List<string>()));" is 121.
Long Statement,Ocelot.UnitTests.Security,IPSecurityPolicyTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Security\IPSecurityPolicyTests.cs,GivenSetBlockedIP,The length of the statement  "            _downstreamRouteBuilder.WithSecurityOptions(new SecurityOptions(new List<string>()' new List<string> { "192.168.1.1" }));" is 121.
Magic Number,Ocelot.UnitTests.CacheManager,OcelotBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\CacheManager\OcelotBuilderExtensionsTests.cs,OcelotBuilderExtensionsTests,The following statement contains a magic number: _maxRetries = 100;
Magic Number,Ocelot.UnitTests.CacheManager,OcelotCacheManagerCache,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\CacheManager\OcelotCacheManagerCache.cs,GivenTheFollowingRegion,The following statement contains a magic number: _ocelotOcelotCacheManager.Add(key' "doesnt matter"' TimeSpan.FromSeconds(10)' "region");
Magic Number,Ocelot.UnitTests.CacheManager,OutputCacheMiddlewareRealCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\CacheManager\OutputCacheMiddlewareRealCacheTests.cs,GivenTheDownstreamRouteIs,The following statement contains a magic number: var route = new DownstreamRouteBuilder()                  .WithIsCached(true)                  .WithCacheOptions(new CacheOptions(100' "kanken"))                  .WithUpstreamHttpMethod(new List<string> { "Get" })                  .Build();
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_cache,The following statement contains a magic number: _cache.Add("1"' fake' TimeSpan.FromSeconds(100)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_add_and_delete,The following statement contains a magic number: _cache.Add("1"' fake' TimeSpan.FromSeconds(100)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_add_and_delete,The following statement contains a magic number: _cache.AddAndDelete("1"' newFake' TimeSpan.FromSeconds(100)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_clear_region,The following statement contains a magic number: var fake2 = new Fake(2);
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_clear_region,The following statement contains a magic number: _cache.Add("1"' fake1' TimeSpan.FromSeconds(100)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_clear_region,The following statement contains a magic number: _cache.Add("2"' fake2' TimeSpan.FromSeconds(100)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_clear_key_if_ttl_expired,The following statement contains a magic number: _cache.Add("1"' fake' TimeSpan.FromMilliseconds(50)' "region");
Magic Number,Ocelot.UnitTests.Cache,AspMemoryCacheTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\AspMemoryCacheTests.cs,should_clear_key_if_ttl_expired,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Ocelot.UnitTests.Cache,OutputCacheMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Cache\OutputCacheMiddlewareTests.cs,GivenTheDownstreamRouteIs,The following statement contains a magic number: var route = new RouteBuilder()                 .WithDownstreamRoute(new DownstreamRouteBuilder()                     .WithIsCached(true)                     .WithCacheOptions(new CacheOptions(100' "kanken"))                     .WithUpstreamHttpMethod(new List<string> { "Get" })                     .Build())                 .WithUpstreamHttpMethod(new List<string> { "Get" })                 .Build();
Magic Number,Ocelot.UnitTests.Configuration,AggregatesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\AggregatesCreatorTests.cs,ThenTheAggregatesAreCreated,The following statement contains a magic number: _result.Count.ShouldBe(2);
Magic Number,Ocelot.UnitTests.Configuration,AggregatesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\AggregatesCreatorTests.cs,ThenTheAggregatesAreCreated,The following statement contains a magic number: _result[1].DownstreamRoute.ShouldContain(x => x == _routes[2].DownstreamRoute[0]);
Magic Number,Ocelot.UnitTests.Configuration,AggregatesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\AggregatesCreatorTests.cs,ThenTheAggregatesAreCreated,The following statement contains a magic number: _result[1].DownstreamRoute.ShouldContain(x => x == _routes[3].DownstreamRoute[0]);
Magic Number,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,FakeFileConfigurationForSet,The following statement contains a magic number: var routes = new List<FileRoute>              {                  new FileRoute                  {                      DownstreamHostAndPorts = new List<FileHostAndPort>                      {                          new FileHostAndPort                          {                              Host = "123.12.12.12"'                              Port = 80'                          }'                      }'                      DownstreamScheme = "https"'                      DownstreamPathTemplate = "/asdfs/test/{test}"'                  }'              };
Magic Number,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,FakeFileConfigurationForSet,The following statement contains a magic number: var globalConfiguration = new FileGlobalConfiguration              {                  ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                  {                      Scheme = "https"'                      Port = 198'                      Host = "blah"                  }              };
Magic Number,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,FakeFileConfigurationForGet,The following statement contains a magic number: var routes = new List<FileRoute>              {                  new FileRoute                  {                      DownstreamHostAndPorts = new List<FileHostAndPort>                      {                          new FileHostAndPort                          {                              Host = "localhost"'                              Port = 80'                          }                      }'                      DownstreamScheme = "https"'                      DownstreamPathTemplate = "/test/test/{test}"                  }              };
Magic Number,Ocelot.UnitTests.Configuration,DiskFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DiskFileConfigurationRepositoryTests.cs,FakeFileConfigurationForGet,The following statement contains a magic number: var globalConfiguration = new FileGlobalConfiguration              {                  ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                  {                      Scheme = "https"'                      Port = 198'                      Host = "blah"                  }              };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_old_downstream_path_and_port,The following statement contains a magic number: var route = new FileRoute             {                 DownstreamHostAndPorts = new List<FileHostAndPort>                 {                     new FileHostAndPort                     {                         Host = "test"'                         Port = 80                     }                 }'             };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_old_downstream_path_and_port,The following statement contains a magic number: var expected = new List<DownstreamHostAndPort>             {                 new DownstreamHostAndPort("test"' 80)'             };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_downstream_host_and_ports,The following statement contains a magic number: var route = new FileRoute             {                 DownstreamHostAndPorts = new List<FileHostAndPort>                 {                     new FileHostAndPort                     {                         Host = "test"'                         Port = 80                     }'                     new FileHostAndPort                     {                         Host = "west"'                         Port = 443                     }                 }             };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_downstream_host_and_ports,The following statement contains a magic number: var route = new FileRoute             {                 DownstreamHostAndPorts = new List<FileHostAndPort>                 {                     new FileHostAndPort                     {                         Host = "test"'                         Port = 80                     }'                     new FileHostAndPort                     {                         Host = "west"'                         Port = 443                     }                 }             };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_downstream_host_and_ports,The following statement contains a magic number: var expected = new List<DownstreamHostAndPort>             {                 new DownstreamHostAndPort("test"' 80)'                 new DownstreamHostAndPort("west"' 443)             };
Magic Number,Ocelot.UnitTests.Configuration,DownstreamAddressesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DownstreamAddressesCreatorTests.cs,should_create_downstream_addresses_from_downstream_host_and_ports,The following statement contains a magic number: var expected = new List<DownstreamHostAndPort>             {                 new DownstreamHostAndPort("test"' 80)'                 new DownstreamHostAndPort("west"' 443)             };
Magic Number,Ocelot.UnitTests.Configuration,DynamicsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\DynamicsCreatorTests.cs,ThenTheRoutesAreReturned,The following statement contains a magic number: _result.Count.ShouldBe(2);
Magic Number,Ocelot.UnitTests.Configuration,FileConfigurationPollerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileConfigurationPollerTests.cs,FileConfigurationPollerTests,The following statement contains a magic number: _config.Setup(x => x.Delay).Returns(100);
Magic Number,Ocelot.UnitTests.Configuration,FileConfigurationPollerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileConfigurationPollerTests.cs,should_not_poll_if_already_polling,The following statement contains a magic number: this.Given(x => GivenPollerHasStarted())                  .Given(x => WhenTheConfigIsChanged(newConfig' 10))                  .Then(x => ThenTheSetterIsCalled(newConfig' 1))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration,FileConfigurationPollerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileConfigurationPollerTests.cs,ThenTheSetterIsCalled,The following statement contains a magic number: var result = WaitFor(4000).Until(() =>              {                  try                  {                      _internalConfigRepo.Verify(x => x.AddOrReplace(_internalConfig)' Times.Exactly(times));                      _internalConfigCreator.Verify(x => x.Create(fileConfig)' Times.Exactly(times));                      return true;                  }                  catch (Exception)                  {                      return false;                  }              });
Magic Number,Ocelot.UnitTests.Configuration,FileConfigurationPollerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\FileConfigurationPollerTests.cs,ThenTheSetterIsCalledAtLeast,The following statement contains a magic number: var result = WaitFor(4000).Until(() =>              {                  try                  {                      _internalConfigRepo.Verify(x => x.AddOrReplace(_internalConfig)' Times.AtLeast(times));                      _internalConfigCreator.Verify(x => x.Create(fileConfig)' Times.AtLeast(times));                      return true;                  }                  catch (Exception)                  {                      return false;                  }              });
Magic Number,Ocelot.UnitTests.Configuration,HashCreationTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HashCreationTests.cs,should_create_hash_and_salt,The following statement contains a magic number: var salt = new byte[128 / 8];
Magic Number,Ocelot.UnitTests.Configuration,HashCreationTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HashCreationTests.cs,should_create_hash_and_salt,The following statement contains a magic number: var salt = new byte[128 / 8];
Magic Number,Ocelot.UnitTests.Configuration,HashCreationTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HashCreationTests.cs,should_create_hash_and_salt,The following statement contains a magic number: var storedHash = Convert.ToBase64String(KeyDerivation.Pbkdf2(                  password: password'                  salt: salt'                  prf: KeyDerivationPrf.HMACSHA256'                  iterationCount: 10000'                  numBytesRequested: 256 / 8));
Magic Number,Ocelot.UnitTests.Configuration,HashCreationTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HashCreationTests.cs,should_create_hash_and_salt,The following statement contains a magic number: var storedHash = Convert.ToBase64String(KeyDerivation.Pbkdf2(                  password: password'                  salt: salt'                  prf: KeyDerivationPrf.HMACSHA256'                  iterationCount: 10000'                  numBytesRequested: 256 / 8));
Magic Number,Ocelot.UnitTests.Configuration,HashCreationTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HashCreationTests.cs,should_create_hash_and_salt,The following statement contains a magic number: var storedHash = Convert.ToBase64String(KeyDerivation.Pbkdf2(                  password: password'                  salt: salt'                  prf: KeyDerivationPrf.HMACSHA256'                  iterationCount: 10000'                  numBytesRequested: 256 / 8));
Magic Number,Ocelot.UnitTests.Configuration,HttpHandlerOptionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HttpHandlerOptionsCreatorTests.cs,should_create_options_with_specified_MaxConnectionsPerServer,The following statement contains a magic number: var fileRoute = new FileRoute              {                  HttpHandlerOptions = new FileHttpHandlerOptions                  {                      MaxConnectionsPerServer = 10                  }              };
Magic Number,Ocelot.UnitTests.Configuration,HttpHandlerOptionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\HttpHandlerOptionsCreatorTests.cs,should_create_options_with_specified_MaxConnectionsPerServer,The following statement contains a magic number: var expectedOptions = new HttpHandlerOptions(false' false' false' true' 10);
Magic Number,Ocelot.UnitTests.Configuration,RateLimitOptionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RateLimitOptionsCreatorTests.cs,should_create_rate_limit_options,The following statement contains a magic number: var fileGlobalConfig = new FileGlobalConfiguration              {                  RateLimitOptions = new FileRateLimitOptions                  {                      ClientIdHeader = "ClientIdHeader"'                      DisableRateLimitHeaders = true'                      QuotaExceededMessage = "QuotaExceededMessage"'                      RateLimitCounterPrefix = "RateLimitCounterPrefix"'                      HttpStatusCode = 200                  }              };
Magic Number,Ocelot.UnitTests.Configuration,RateLimitOptionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RateLimitOptionsCreatorTests.cs,should_create_rate_limit_options,The following statement contains a magic number: var expected = new RateLimitOptionsBuilder()                  .WithClientIdHeader("ClientIdHeader")                  .WithClientWhiteList(() => fileRoute.RateLimitOptions.ClientWhitelist)                  .WithDisableRateLimitHeaders(true)                  .WithEnableRateLimiting(true)                  .WithHttpStatusCode(200)                  .WithQuotaExceededMessage("QuotaExceededMessage")                  .WithRateLimitCounterPrefix("RateLimitCounterPrefix")                  .WithRateLimitRule(new RateLimitRule(fileRoute.RateLimitOptions.Period'                         fileRoute.RateLimitOptions.PeriodTimespan'                         fileRoute.RateLimitOptions.Limit))                  .Build();
Magic Number,Ocelot.UnitTests.Configuration,RouteKeyCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RouteKeyCreatorTests.cs,should_return_re_route_key,The following statement contains a magic number: var route = new FileRoute              {                  UpstreamPathTemplate = "/api/product"'                  UpstreamHttpMethod = new List<string> { "GET"' "POST"' "PUT" }'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 123                      }'                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 123                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration,RouteKeyCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RouteKeyCreatorTests.cs,should_return_re_route_key,The following statement contains a magic number: var route = new FileRoute              {                  UpstreamPathTemplate = "/api/product"'                  UpstreamHttpMethod = new List<string> { "GET"' "POST"' "PUT" }'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 123                      }'                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 123                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration,RoutesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RoutesCreatorTests.cs,ThenTheRoutesAreCreated,The following statement contains a magic number: _result.Count.ShouldBe(2);
Magic Number,Ocelot.UnitTests.Configuration,RoutesCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\RoutesCreatorTests.cs,ThenTheDepsAreCalledFor,The following statement contains a magic number: _utpCreator.Verify(x => x.Create(fileRoute)' Times.Exactly(2));
Magic Number,Ocelot.UnitTests.Configuration,ServiceProviderCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\ServiceProviderCreatorTests.cs,should_create_service_provider_config,The following statement contains a magic number: var globalConfig = new FileGlobalConfiguration             {                 ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                 {                     Scheme = "https"'                     Host = "127.0.0.1"'                     Port = 1234'                     Type = "ServiceFabric"'                     Token = "testtoken"'                     ConfigurationKey = "woo"'                     Namespace = "default"                 }             };
Magic Number,Ocelot.UnitTests.Configuration,ServiceProviderCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\ServiceProviderCreatorTests.cs,should_create_service_provider_config,The following statement contains a magic number: var expected = new ServiceProviderConfigurationBuilder()                 .WithScheme("https")                 .WithHost("127.0.0.1")                 .WithPort(1234)                 .WithType("ServiceFabric")                 .WithToken("testtoken")                 .WithConfigurationKey("woo")                 .WithNamespace("default")                 .Build();
Magic Number,Ocelot.UnitTests.Configuration,VersionCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\VersionCreatorTests.cs,should_create_version_based_on_input,The following statement contains a magic number: this.Given(_ => GivenTheInput("2.0"))                 .When(_ => WhenICreate())                 .Then(_ => ThenTheResultIs(2' 0))                 .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_service_discovery_options_specified_and_has_service_fabric_as_option,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          ServiceName = "test"                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "ServiceFabric"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_service_discovery_options_specified_and_has_service_discovery_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          ServiceName = "test"                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "FakeServiceDiscoveryProvider"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_service_discovery_options_specified_dynamically_and_has_service_discovery_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "FakeServiceDiscoveryProvider"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_but_no_service_discovery_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          ServiceName = "test"                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "FakeServiceDiscoveryProvider"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_dynamically_but_service_discovery_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "FakeServiceDiscoveryProvider"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_service_discovery_options_specified_but_no_service_discovery_handler_with_matching_name,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          ServiceName = "test"                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "localhost"'                          Type = "consul"'                          Port = 8500                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_qos_options_specified_and_has_qos_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "localhost"'                                  Port = 51878'                              }                          }'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          Key = "Laura"'                          QoSOptions = new FileQoSOptions                          {                              TimeoutValue = 1'                              ExceptionsAllowedBeforeBreaking = 1                          }                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_qos_options_specified_globally_and_has_qos_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "localhost"'                                  Port = 51878'                              }                          }'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          Key = "Laura"'                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      QoSOptions = new FileQoSOptions                      {                          TimeoutValue = 1'                          ExceptionsAllowedBeforeBreaking = 1                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_qos_options_specified_but_no_qos_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "localhost"'                                  Port = 51878'                              }                          }'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          Key = "Laura"'                          QoSOptions = new FileQoSOptions                          {                              TimeoutValue = 1'                              ExceptionsAllowedBeforeBreaking = 1                          }                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_qos_options_specified_globally_but_no_qos_handler,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/"'                          DownstreamScheme = "http"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "localhost"'                                  Port = 51878'                              }                          }'                          UpstreamPathTemplate = "/laura"'                          UpstreamHttpMethod = new List<string> { "Get" }'                          Key = "Laura"'                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      QoSOptions = new FileQoSOptions                      {                          TimeoutValue = 1'                          ExceptionsAllowedBeforeBreaking = 1                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_aggregates_are_valid,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_aggregates_are_valid,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregates_are_duplicate_of_re_routes,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"'                              UpstreamHost = "localhost"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }'                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregates_are_duplicate_of_re_routes,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"'                              UpstreamHost = "localhost"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }'                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_aggregates_are_not_duplicate_of_re_routes,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Post" }'                              Key = "Tom"'                              UpstreamHost = "localhost"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }'                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_if_aggregates_are_not_duplicate_of_re_routes,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Post" }'                              Key = "Tom"'                              UpstreamHost = "localhost"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }'                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregates_are_duplicate_of_aggregates,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/lol"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }'                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregates_are_duplicate_of_aggregates,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/lol"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }'                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/tom"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_re_routes_dont_exist_for_aggregate,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregate_has_re_routes_with_specific_request_id_keys,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              RequestIdKey = "should_fail"'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_aggregate_has_re_routes_with_specific_request_id_keys,The following statement contains a magic number: var configuration = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51878'                                  }                              }'                              UpstreamPathTemplate = "/laura"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              Key = "Laura"                          }'                          new FileRoute                          {                              DownstreamPathTemplate = "/"'                              DownstreamScheme = "http"'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "localhost"'                                      Port = 51880'                                  }                              }'                              UpstreamPathTemplate = "/tom"'                              UpstreamHttpMethod = new List<string> { "Get" }'                              RequestIdKey = "should_fail"'                              Key = "Tom"                          }                      }'                  Aggregates = new List<FileAggregateRoute>                      {                          new FileAggregateRoute                          {                              UpstreamPathTemplate = "/"'                              UpstreamHost = "localhost"'                              RouteKeys = new List<string>                              {                                  "Tom"'                                  "Laura"                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "http://www.bbc.co.uk/api/products/{productId}"'                          UpstreamPathTemplate = "http://asdf.com"                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .Then(x => x.ThenTheErrorIs<FileValidationFailedError>())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(1' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(2' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains scheme"))                    .And(x => x.ThenTheErrorMessageAtPositionIs(3' "Upstream Path Template http://asdf.com contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(4' "Upstream Path Template http://asdf.com doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(5' "Upstream Path Template http://asdf.com contains scheme"))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "http://www.bbc.co.uk/api/products/{productId}"'                          UpstreamPathTemplate = "http://asdf.com"                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .Then(x => x.ThenTheErrorIs<FileValidationFailedError>())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(1' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(2' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains scheme"))                    .And(x => x.ThenTheErrorMessageAtPositionIs(3' "Upstream Path Template http://asdf.com contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(4' "Upstream Path Template http://asdf.com doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(5' "Upstream Path Template http://asdf.com contains scheme"))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "http://www.bbc.co.uk/api/products/{productId}"'                          UpstreamPathTemplate = "http://asdf.com"                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .Then(x => x.ThenTheErrorIs<FileValidationFailedError>())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(1' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(2' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains scheme"))                    .And(x => x.ThenTheErrorMessageAtPositionIs(3' "Upstream Path Template http://asdf.com contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(4' "Upstream Path Template http://asdf.com doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(5' "Upstream Path Template http://asdf.com contains scheme"))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_scheme_in_downstream_or_upstream_template,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "http://www.bbc.co.uk/api/products/{productId}"'                          UpstreamPathTemplate = "http://asdf.com"                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .Then(x => x.ThenTheErrorIs<FileValidationFailedError>())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(1' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(2' "Downstream Path Template http://www.bbc.co.uk/api/products/{productId} contains scheme"))                    .And(x => x.ThenTheErrorMessageAtPositionIs(3' "Upstream Path Template http://asdf.com contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .And(x => x.ThenTheErrorMessageAtPositionIs(4' "Upstream Path Template http://asdf.com doesnt start with forward slash"))                  .And(x => x.ThenTheErrorMessageAtPositionIs(5' "Upstream Path Template http://asdf.com contains scheme"))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_upstream_url_contains_forward_slash_then_another_forward_slash,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/api/products/"'                          UpstreamPathTemplate = "//api/prod/"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "bbc.co.uk"'                                  Port = 80                              }                          }'                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Upstream Path Template //api/prod/ contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_invalid_if_downstream_url_contains_forward_slash_then_another_forward_slash,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "//api/products/"'                          UpstreamPathTemplate = "/api/prod/"'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "bbc.co.uk"'                                  Port = 80                              }                          }'                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsNotValid())                  .And(x => x.ThenTheErrorMessageAtPositionIs(0' "Downstream Path Template //api/products/ contains double forward slash' Ocelot does not support this at the moment. Please raise an issue in GitHib if you need this feature."))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,FileConfigurationFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\FileConfigurationFluentValidatorTests.cs,configuration_is_valid_with_using_service_discovery_and_service_name,The following statement contains a magic number: this.Given(x => x.GivenAConfiguration(new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamPathTemplate = "/api/products/"'                          UpstreamPathTemplate = "/asdf/"'                          UpstreamHttpMethod = new List<string> {"Get"}'                          ServiceName = "Test"                      }                  }'                  GlobalConfiguration = new FileGlobalConfiguration                  {                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Type = "servicefabric"'                          Host = "localhost"'                          Port = 1234                      }                  }              }))                  .When(x => x.WhenIValidateTheConfiguration())                  .Then(x => x.ThenTheResultIsValid())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_be_valid_re_route_using_host_and_port_and_paths,The following statement contains a magic number: var fileRoute = new FileRoute              {                  DownstreamPathTemplate = "/test"'                  UpstreamPathTemplate = "/test"'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 5000                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_be_valid_if_specified_authentication_provider_is_registered,The following statement contains a magic number: var fileRoute = new FileRoute              {                  DownstreamPathTemplate = "/test"'                  UpstreamPathTemplate = "/test"'                  AuthenticationOptions = new FileAuthenticationOptions                  {                      AuthenticationProviderKey = key                  }'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 5000                      }                  }              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_be_valid_re_route_using_downstream_http_version,The following statement contains a magic number: var fileRoute = new FileRoute              {                  DownstreamPathTemplate = "/test"'                  UpstreamPathTemplate = "/test"'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 5000'                      }'                  }'                  DownstreamHttpVersion = version'              };
Magic Number,Ocelot.UnitTests.Configuration.Validation,RouteFluentValidatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Configuration\Validation\RouteFluentValidatorTests.cs,should_be_invalid_re_route_using_downstream_http_version,The following statement contains a magic number: var fileRoute = new FileRoute              {                  DownstreamPathTemplate = "/test"'                  UpstreamPathTemplate = "/test"'                  DownstreamHostAndPorts = new List<FileHostAndPort>                  {                      new FileHostAndPort                      {                          Host = "localhost"'                          Port = 5000'                      }'                  }'                  DownstreamHttpVersion = version'              };
Magic Number,Ocelot.UnitTests.Consul,ConsulFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulFileConfigurationRepositoryTests.cs,FakeFileConfiguration,The following statement contains a magic number: var routes = new List<FileRoute>              {                  new FileRoute                  {                      DownstreamHostAndPorts = new List<FileHostAndPort>                      {                          new FileHostAndPort                          {                              Host = "123.12.12.12"'                              Port = 80'                          }                      }'                      DownstreamScheme = "https"'                      DownstreamPathTemplate = "/asdfs/test/{test}"                  }              };
Magic Number,Ocelot.UnitTests.Consul,ConsulFileConfigurationRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulFileConfigurationRepositoryTests.cs,FakeFileConfiguration,The following statement contains a magic number: var globalConfiguration = new FileGlobalConfiguration              {                  ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                  {                      Scheme = "https"'                      Port = 198'                      Host = "blah"                  }              };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,ConsulServiceDiscoveryProviderTests,The following statement contains a magic number: _port = 8500;
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_return_service_from_consul,The following statement contains a magic number: var serviceEntryOne = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = "localhost"'                     Port = 50881'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]                 }'             };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_use_token,The following statement contains a magic number: var serviceEntryOne = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = "localhost"'                     Port = 50881'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]'                 }'             };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_not_return_services_with_invalid_address,The following statement contains a magic number: var serviceEntryOne = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = "http://localhost"'                     Port = 50881'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]                 }'             };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_not_return_services_with_invalid_address,The following statement contains a magic number: var serviceEntryTwo = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = "http://localhost"'                     Port = 50888'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]                 }'             };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_not_return_services_with_empty_address,The following statement contains a magic number: var serviceEntryOne = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = ""'                     Port = 50881'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]                 }'             };
Magic Number,Ocelot.UnitTests.Consul,ConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ConsulServiceDiscoveryProviderTests.cs,should_not_return_services_with_empty_address,The following statement contains a magic number: var serviceEntryTwo = new ServiceEntry()             {                 Service = new AgentService()                 {                     Service = _serviceName'                     Address = null'                     Port = 50888'                     ID = Guid.NewGuid().ToString()'                     Tags = new string[0]                 }'             };
Magic Number,Ocelot.UnitTests.Consul,PollingConsulServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\PollingConsulServiceDiscoveryProviderTests.cs,WhenIGetTheServices,The following statement contains a magic number: var result = Wait.WaitFor(3000).Until(() =>                 {                     try                     {                         _result = provider.Get().GetAwaiter().GetResult();                         if (_result.Count == expected)                         {                             return true;                         }                          return false;                     }                     catch (Exception)                     {                         return false;                     }                 });
Magic Number,Ocelot.UnitTests.Consul,ProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Consul\ProviderFactoryTests.cs,should_return_PollingConsulServiceDiscoveryProvider,The following statement contains a magic number: var stopsPollerFromPolling = 10000;
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _globalConfig = new FileConfiguration              {                  GlobalConfiguration = new FileGlobalConfiguration                  {                      BaseUrl = "BaseUrl"'                      RateLimitOptions = new FileRateLimitOptions                      {                          HttpStatusCode = 500'                          ClientIdHeader = "ClientIdHeader"'                          DisableRateLimitHeaders = true'                          QuotaExceededMessage = "QuotaExceededMessage"'                          RateLimitCounterPrefix = "RateLimitCounterPrefix"                      }'                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "Host"'                          Port = 80'                          Type = "Type"                      }'                      RequestIdKey = "RequestIdKey"                  }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _globalConfig = new FileConfiguration              {                  GlobalConfiguration = new FileGlobalConfiguration                  {                      BaseUrl = "BaseUrl"'                      RateLimitOptions = new FileRateLimitOptions                      {                          HttpStatusCode = 500'                          ClientIdHeader = "ClientIdHeader"'                          DisableRateLimitHeaders = true'                          QuotaExceededMessage = "QuotaExceededMessage"'                          RateLimitCounterPrefix = "RateLimitCounterPrefix"                      }'                      ServiceDiscoveryProvider = new FileServiceDiscoveryProvider                      {                          Scheme = "https"'                          Host = "Host"'                          Port = 80'                          Type = "Type"                      }'                      RequestIdKey = "RequestIdKey"                  }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _routeA = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamScheme = "DownstreamScheme"'                          DownstreamPathTemplate = "DownstreamPathTemplate"'                          Key = "Key"'                          UpstreamHost = "UpstreamHost"'                          UpstreamHttpMethod = new List<string>                          {                              "UpstreamHttpMethod"                          }'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "Host"'                                  Port = 80                              }                          }                      }                  }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _routeB = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamScheme = "DownstreamSchemeB"'                          DownstreamPathTemplate = "DownstreamPathTemplateB"'                          Key = "KeyB"'                          UpstreamHost = "UpstreamHostB"'                          UpstreamHttpMethod = new List<string>                          {                              "UpstreamHttpMethodB"                          }'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "HostB"'                                  Port = 80                              }                          }                      }'                      new FileRoute                      {                          DownstreamScheme = "DownstreamSchemeBB"'                          DownstreamPathTemplate = "DownstreamPathTemplateBB"'                          Key = "KeyBB"'                          UpstreamHost = "UpstreamHostBB"'                          UpstreamHttpMethod = new List<string>                          {                              "UpstreamHttpMethodBB"                          }'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "HostBB"'                                  Port = 80                              }                          }                      }                  }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _routeB = new FileConfiguration              {                  Routes = new List<FileRoute>                  {                      new FileRoute                      {                          DownstreamScheme = "DownstreamSchemeB"'                          DownstreamPathTemplate = "DownstreamPathTemplateB"'                          Key = "KeyB"'                          UpstreamHost = "UpstreamHostB"'                          UpstreamHttpMethod = new List<string>                          {                              "UpstreamHttpMethodB"                          }'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "HostB"'                                  Port = 80                              }                          }                      }'                      new FileRoute                      {                          DownstreamScheme = "DownstreamSchemeBB"'                          DownstreamPathTemplate = "DownstreamPathTemplateBB"'                          Key = "KeyBB"'                          UpstreamHost = "UpstreamHostBB"'                          UpstreamHttpMethod = new List<string>                          {                              "UpstreamHttpMethodBB"                          }'                          DownstreamHostAndPorts = new List<FileHostAndPort>                          {                              new FileHostAndPort                              {                                  Host = "HostBB"'                                  Port = 80                              }                          }                      }                  }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,ConfigurationBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\ConfigurationBuilderExtensionsTests.cs,GivenMultipleConfigurationFiles,The following statement contains a magic number: _envSpecific = new FileConfiguration              {                  Routes = new List<FileRoute>                      {                          new FileRoute                          {                              DownstreamScheme = "DownstreamSchemeSpec"'                              DownstreamPathTemplate = "DownstreamPathTemplateSpec"'                              Key = "KeySpec"'                              UpstreamHost = "UpstreamHostSpec"'                              UpstreamHttpMethod = new List<string>                              {                                  "UpstreamHttpMethodSpec"                              }'                              DownstreamHostAndPorts = new List<FileHostAndPort>                              {                                  new FileHostAndPort                                  {                                      Host = "HostSpec"'                                      Port = 80                                  }                              }                          }                      }              };
Magic Number,Ocelot.UnitTests.DependencyInjection,OcelotBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DependencyInjection\OcelotBuilderTests.cs,OcelotBuilderTests,The following statement contains a magic number: _maxRetries = 100;
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_when_not_dynamic_re_route_and_service_discovery_on,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build();
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_as_no_service_discovery_given_no_scheme,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("").WithHost("test").WithPort(50).Build();
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_as_no_service_discovery_given_no_host,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("").WithPort(50).Build();
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_finder_given_no_service_discovery_type,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("localhost").WithPort(50).WithType("").Build();
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_creator,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build();
Magic Number,Ocelot.UnitTests.DownstreamRouteFinder,DownstreamRouteProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamRouteFinder\DownstreamRouteProviderFactoryTests.cs,should_return_downstream_route_creator_with_dynamic_re_route,The following statement contains a magic number: var spConfig = new ServiceProviderConfigurationBuilder().WithScheme("http").WithHost("test").WithPort(50).WithType("test").Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_not_create_service_fabric_url,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url_with_query_string_for_stateless_service,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url_with_query_string_for_stateful_service,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_create_service_fabric_url_with_version_from_upstream_path_template,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.DownstreamUrlCreator,DownstreamUrlCreatorMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\DownstreamUrlCreator\DownstreamUrlCreatorMiddlewareTests.cs,should_not_replace_by_empty_scheme,The following statement contains a magic number: var config = new ServiceProviderConfigurationBuilder()                 .WithType("ServiceFabric")                 .WithHost("localhost")                 .WithPort(19081)                 .Build();
Magic Number,Ocelot.UnitTests.Errors,ExceptionHandlerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Errors\ExceptionHandlerMiddlewareTests.cs,ThenAnExceptionIsThrown,The following statement contains a magic number: _httpContext.Response.StatusCode.ShouldBe(500);
Magic Number,Ocelot.UnitTests.Errors,ExceptionHandlerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Errors\ExceptionHandlerMiddlewareTests.cs,ThenTheResponseIsOk,The following statement contains a magic number: _httpContext.Response.StatusCode.ShouldBe(200);
Magic Number,Ocelot.UnitTests.Errors,ExceptionHandlerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Errors\ExceptionHandlerMiddlewareTests.cs,ThenTheResponseIsError,The following statement contains a magic number: _httpContext.Response.StatusCode.ShouldBe(500);
Magic Number,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,should_return_service_from_client,The following statement contains a magic number: var instances = new List<IServiceInstance>              {                  new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())              };
Magic Number,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,should_return_services_from_client,The following statement contains a magic number: var instances = new List<IServiceInstance>              {                  new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())'                  new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())              };
Magic Number,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,should_return_services_from_client,The following statement contains a magic number: var instances = new List<IServiceInstance>              {                  new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())'                  new EurekaService(_serviceId' "somehost"' 801' false' new Uri("http://somehost:801")' new Dictionary<string' string>())              };
Magic Number,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,should_return_services_from_client,The following statement contains a magic number: this.Given(_ => GivenThe(instances))                  .When(_ => WhenIGet())                  .Then(_ => ThenTheCountIs(2))                  .And(_ => ThenTheClientIsCalledCorrectly())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Eureka,EurekaServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Eureka\EurekaServiceDiscoveryProviderTests.cs,ThenTheServiceIsMapped,The following statement contains a magic number: _result[0].HostAndPort.DownstreamPort.ShouldBe(801);
Magic Number,Ocelot.UnitTests.Infrastructure,ClaimParserTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Infrastructure\ClaimParserTests.cs,should_return_error_response_if_index_too_large,The following statement contains a magic number: this.Given(x => x.GivenAClaimOf(new Claim("Subject"' "registered|4321")))                  .And(x => x.GivenTheDelimiterIs("|"))                  .And(x => x.GivenTheIndexIs(24))                  .And(x => x.GivenTheKeyIs("Subject"))                  .When(x => x.WhenICallTheParser())                  .Then(x => x.ThenTheResultIs(new ErrorResponse<string>(new List<Error>                  {                      new CannotFindClaimError($"Cannot find claim for key: {_key}' delimiter: {_delimiter}' index: {_index}")                  })))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Infrastructure,InMemoryBusTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Infrastructure\InMemoryBusTests.cs,should_publish_with_delay,The following statement contains a magic number: await Task.Delay(100);
Magic Number,Ocelot.UnitTests.Kubernetes,KubeServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Kubernetes\KubeServiceDiscoveryProviderTests.cs,KubeServiceDiscoveryProviderTests,The following statement contains a magic number: _port = 5567;
Magic Number,Ocelot.UnitTests.Kubernetes,KubeServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Kubernetes\KubeServiceDiscoveryProviderTests.cs,should_return_service_from_k8s,The following statement contains a magic number: endpointSubsetV1.Ports.Add(new EndpointPortV1()              {                  Port = 80'              });
Magic Number,Ocelot.UnitTests.Kubernetes,PollingKubeServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Kubernetes\PollingKubeServiceDiscoveryProviderTests.cs,WhenIGetTheServices,The following statement contains a magic number: var result = Wait.WaitFor(3000).Until(() =>             {                 try                 {                     _result = _provider.Get().GetAwaiter().GetResult();                     if (_result.Count == expected)                     {                         return true;                     }                      return false;                 }                 catch (Exception)                 {                     return false;                 }             });
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsCreatorTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsCreatorTests.cs,should_return_instance_of_expected_load_balancer_type,The following statement contains a magic number: var route = new DownstreamRouteBuilder()                  .WithLoadBalancerOptions(new LoadBalancerOptions("myType"' "myKey"' 1000))                  .Build();
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,GivenIHackAMessageInWithAPastExpiry,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("999"' 999);
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,ThenADifferentHostAndPortIsReturned,The following statement contains a magic number: _firstHostAndPort.Data.DownstreamPort.ShouldBe(80);
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,ThenADifferentHostAndPortIsReturned,The following statement contains a magic number: _secondHostAndPort.Data.DownstreamPort.ShouldBe(80);
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,GivenTheLoadBalancerReturnsSequence,The following statement contains a magic number: _loadBalancer                 .SetupSequence(x => x.Lease(It.IsAny<HttpContext>()))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort("one"' 80)))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort("two"' 80)));
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,GivenTheLoadBalancerReturnsSequence,The following statement contains a magic number: _loadBalancer                 .SetupSequence(x => x.Lease(It.IsAny<HttpContext>()))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort("one"' 80)))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort("two"' 80)));
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,GivenTheLoadBalancerReturns,The following statement contains a magic number: _loadBalancer                 .Setup(x => x.Lease(It.IsAny<HttpContext>()))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort(""' 80)));
Magic Number,Ocelot.UnitTests.LoadBalancer,CookieStickySessionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\CookieStickySessionsTests.cs,ThenTheStickySessionWillTimeout,The following statement contains a magic number: _bus.Messages.Count.ShouldBe(2);
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_be_able_to_lease_and_release_concurrently,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_be_able_to_lease_and_release_concurrently,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_be_able_to_lease_and_release_concurrently,The following statement contains a magic number: var tasks = new Task[100];
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_handle_service_returning_to_available,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_handle_service_returning_to_available,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_handle_service_returning_to_available,The following statement contains a magic number: availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_handle_service_returning_to_available,The following statement contains a magic number: availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_handle_service_returning_to_available,The following statement contains a magic number: availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,LeaseDelayAndRelease,The following statement contains a magic number: await Task.Delay(_random.Next(1' 100));
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_get_next_url,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("localhost"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_serve_from_service_with_least_connections,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.3"' 80)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_serve_from_service_with_least_connections,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.3"' 80)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_serve_from_service_with_least_connections,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.3"' 80)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_serve_from_service_with_least_connections,The following statement contains a magic number: response.Data.DownstreamHost.ShouldBe(availableServices[2].HostAndPort.DownstreamHost);
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_build_connections_per_service,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_build_connections_per_service,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_release_connection,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_release_connection,The following statement contains a magic number: var availableServices = new List<Service>             {                 new Service(serviceName' new ServiceHostAndPort("127.0.0.1"' 80)' string.Empty' string.Empty' new string[0])'                 new Service(serviceName' new ServiceHostAndPort("127.0.0.2"' 80)' string.Empty' string.Empty' new string[0])'             };
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_return_error_if_services_are_null,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("localhost"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,LeastConnectionTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LeastConnectionTests.cs,should_return_error_if_services_are_empty,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("localhost"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,LoadBalancerHouseTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerHouseTests.cs,LoadBalancerHouseTests,The following statement contains a magic number: _serviceProviderConfig = new ServiceProviderConfiguration("myType"' "myScheme"' "myHost"' 123' string.Empty' "configKey"' 0);
Magic Number,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,GivenTheLoadBalancerReturnsOk,The following statement contains a magic number: _loadBalancer                 .Setup(x => x.Lease(It.IsAny<HttpContext>()))                 .ReturnsAsync(new OkResponse<ServiceHostAndPort>(new ServiceHostAndPort("abc"' 123' "https")));
Magic Number,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,GivenTheLoadBalancerReturns,The following statement contains a magic number: _hostAndPort = new ServiceHostAndPort("127.0.0.1"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,LoadBalancerMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\LoadBalancerMiddlewareTests.cs,ThenAnHostAndPortIsSetOnPipeline,The following statement contains a magic number: _httpContext.Items.DownstreamRequest().Port.ShouldBeEquivalentTo(123);
Magic Number,Ocelot.UnitTests.LoadBalancer,NoLoadBalancerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\NoLoadBalancerTests.cs,should_return_host_and_port,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("127.0.0.1"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,NoLoadBalancerTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\NoLoadBalancerTests.cs,should_return_error_if_no_services_then_when_services_available_return_host_and_port,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("127.0.0.1"' 80);
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,RoundRobinTests,The following statement contains a magic number: _services = new List<Service>             {                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5000)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,RoundRobinTests,The following statement contains a magic number: _services = new List<Service>             {                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5000)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,RoundRobinTests,The following statement contains a magic number: _services = new List<Service>             {                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5000)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])'                 new Service("product"' new ServiceHostAndPort("127.0.0.1"' 5001)' string.Empty' string.Empty' new string[0])             };
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,should_get_next_address,The following statement contains a magic number: this.Given(x => x.GivenIGetTheNextAddress())                 .Then(x => x.ThenTheNextAddressIndexIs(0))                 .Given(x => x.GivenIGetTheNextAddress())                 .Then(x => x.ThenTheNextAddressIndexIs(1))                 .Given(x => x.GivenIGetTheNextAddress())                 .Then(x => x.ThenTheNextAddressIndexIs(2))                 .BDDfy();
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,should_go_back_to_first_address_after_finished_last,The following statement contains a magic number: address.Data.ShouldBe(_services[2].HostAndPort);
Magic Number,Ocelot.UnitTests.LoadBalancer,RoundRobinTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\LoadBalancer\RoundRobinTests.cs,should_go_back_to_first_address_after_finished_last,The following statement contains a magic number: stopWatch.ElapsedMilliseconds < 1000
Magic Number,Ocelot.UnitTests.Middleware,OcelotPiplineBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Middleware\OcelotPiplineBuilderTests.cs,ThenTheGenericIsInThePipeline,The following statement contains a magic number: _httpContext.Response.StatusCode.ShouldBe(500);
Magic Number,Ocelot.UnitTests.Middleware,OcelotPiplineBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Middleware\OcelotPiplineBuilderTests.cs,ThenTheFuncIsInThePipeline,The following statement contains a magic number: _httpContext.Response.StatusCode.ShouldBe(404);
Magic Number,Ocelot.UnitTests.Multiplexing,MultiplexingMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Multiplexing\MultiplexingMiddlewareTests.cs,should_multiplex,The following statement contains a magic number: this.Given(x => GivenTheFollowing(route))                 .When(x => WhenIMultiplex())                 .Then(x => ThePipelineIsCalled(2))                 .BDDfy();
Magic Number,Ocelot.UnitTests.Polly,OcelotBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Polly\OcelotBuilderExtensionsTests.cs,should_build,The following statement contains a magic number: var options = new QoSOptionsBuilder()                  .WithTimeoutValue(100)                  .WithExceptionsAllowedBeforeBreaking(1)                  .WithDurationOfBreak(200)                  .Build();
Magic Number,Ocelot.UnitTests.Polly,OcelotBuilderExtensionsTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Polly\OcelotBuilderExtensionsTests.cs,should_build,The following statement contains a magic number: var options = new QoSOptionsBuilder()                  .WithTimeoutValue(100)                  .WithExceptionsAllowedBeforeBreaking(1)                  .WithDurationOfBreak(200)                  .Build();
Magic Number,Ocelot.UnitTests.Polly,PollyQoSProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Polly\PollyQoSProviderTests.cs,should_build,The following statement contains a magic number: var options = new QoSOptionsBuilder()                  .WithTimeoutValue(100)                  .WithExceptionsAllowedBeforeBreaking(1)                  .WithDurationOfBreak(200)                  .Build();
Magic Number,Ocelot.UnitTests.Polly,PollyQoSProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Polly\PollyQoSProviderTests.cs,should_build,The following statement contains a magic number: var options = new QoSOptionsBuilder()                  .WithTimeoutValue(100)                  .WithExceptionsAllowedBeforeBreaking(1)                  .WithDurationOfBreak(200)                  .Build();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The following statement contains a magic number: var downstreamRoute = new DownstreamRouteBuilder()                 .WithEnableRateLimiting(true)                 .WithRateLimitOptions(new RateLimitOptions(true' "ClientId"' () => new List<string>()' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                 .WithUpstreamHttpMethod(new List<string> { "Get" })                 .WithUpstreamPathTemplate(upstreamTemplate)                 .Build();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The following statement contains a magic number: var downstreamRoute = new DownstreamRouteBuilder()                 .WithEnableRateLimiting(true)                 .WithRateLimitOptions(new RateLimitOptions(true' "ClientId"' () => new List<string>()' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                 .WithUpstreamHttpMethod(new List<string> { "Get" })                 .WithUpstreamPathTemplate(upstreamTemplate)                 .Build();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The following statement contains a magic number: var downstreamRoute = new DownstreamRouteBuilder()                 .WithEnableRateLimiting(true)                 .WithRateLimitOptions(new RateLimitOptions(true' "ClientId"' () => new List<string>()' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                 .WithUpstreamHttpMethod(new List<string> { "Get" })                 .WithUpstreamPathTemplate(upstreamTemplate)                 .Build();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The following statement contains a magic number: this.Given(x => x.WhenICallTheMiddlewareMultipleTimes(2' downstreamRouteHolder))                 .Then(x => x.ThenThereIsNoDownstreamResponse())                 .When(x => x.WhenICallTheMiddlewareMultipleTimes(3' downstreamRouteHolder))                 .Then(x => x.ThenTheResponseIs429())                 .BDDfy();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_and_ratelimiting,The following statement contains a magic number: this.Given(x => x.WhenICallTheMiddlewareMultipleTimes(2' downstreamRouteHolder))                 .Then(x => x.ThenThereIsNoDownstreamResponse())                 .When(x => x.WhenICallTheMiddlewareMultipleTimes(3' downstreamRouteHolder))                 .Then(x => x.ThenTheResponseIs429())                 .BDDfy();
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_withWhitelistClient,The following statement contains a magic number: var downstreamRoute = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()'                  new RouteBuilder()                      .WithDownstreamRoute(new DownstreamRouteBuilder()                          .WithEnableRateLimiting(true)                          .WithRateLimitOptions(                              new Ocelot.Configuration.RateLimitOptions(true' "ClientId"' () => new List<string>() { "ocelotclient2" }' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                          .WithUpstreamHttpMethod(new List<string> { "Get" })                          .Build())                      .WithUpstreamHttpMethod(new List<string> { "Get" })                      .Build());
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_withWhitelistClient,The following statement contains a magic number: var downstreamRoute = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()'                  new RouteBuilder()                      .WithDownstreamRoute(new DownstreamRouteBuilder()                          .WithEnableRateLimiting(true)                          .WithRateLimitOptions(                              new Ocelot.Configuration.RateLimitOptions(true' "ClientId"' () => new List<string>() { "ocelotclient2" }' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                          .WithUpstreamHttpMethod(new List<string> { "Get" })                          .Build())                      .WithUpstreamHttpMethod(new List<string> { "Get" })                      .Build());
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,should_call_middleware_withWhitelistClient,The following statement contains a magic number: var downstreamRoute = new Ocelot.DownstreamRouteFinder.DownstreamRouteHolder(new List<Ocelot.DownstreamRouteFinder.UrlMatcher.PlaceholderNameAndValue>()'                  new RouteBuilder()                      .WithDownstreamRoute(new DownstreamRouteBuilder()                          .WithEnableRateLimiting(true)                          .WithRateLimitOptions(                              new Ocelot.Configuration.RateLimitOptions(true' "ClientId"' () => new List<string>() { "ocelotclient2" }' false' ""' ""' new RateLimitRule("1s"' 100' 3)' 429))                          .WithUpstreamHttpMethod(new List<string> { "Get" })                          .Build())                      .WithUpstreamHttpMethod(new List<string> { "Get" })                      .Build());
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,WhenICallTheMiddlewareWithWhiteClient,The following statement contains a magic number: i < 10
Magic Number,Ocelot.UnitTests.RateLimit,ClientRateLimitMiddlewareTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\RateLimit\ClientRateLimitMiddlewareTests.cs,ThenTheResponseIs429,The following statement contains a magic number: code.ShouldBe(429);
Magic Number,Ocelot.UnitTests.Repository,ScopedRequestDataRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Repository\ScopedRequestDataRepositoryTests.cs,should_add_item,The following statement contains a magic number: this.Given(x => x.GivenIHaveAnItemToAdd("blahh"' new[] { 1' 2' 3' 4 }))                  .When(x => x.WhenIAddTheItem())                  .Then(x => x.ThenTheItemIsAdded())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Repository,ScopedRequestDataRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Repository\ScopedRequestDataRepositoryTests.cs,should_add_item,The following statement contains a magic number: this.Given(x => x.GivenIHaveAnItemToAdd("blahh"' new[] { 1' 2' 3' 4 }))                  .When(x => x.WhenIAddTheItem())                  .Then(x => x.ThenTheItemIsAdded())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Repository,ScopedRequestDataRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Repository\ScopedRequestDataRepositoryTests.cs,should_add_item,The following statement contains a magic number: this.Given(x => x.GivenIHaveAnItemToAdd("blahh"' new[] { 1' 2' 3' 4 }))                  .When(x => x.WhenIAddTheItem())                  .Then(x => x.ThenTheItemIsAdded())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Repository,ScopedRequestDataRepositoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Repository\ScopedRequestDataRepositoryTests.cs,GivenThereIsAnItemInTheContext,The following statement contains a magic number: var data = new[] { 5435345 };
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0)) //first because global not in config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1)) //first from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2)) //second from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(3)) //third from config (global)                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0)) //first because global not in config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1)) //first from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2)) //second from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(3)) //third from config (global)                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0)) //first because global not in config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1)) //first from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2)) //second from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(3)) //third from config (global)                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0)) //first because global not in config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1)) //first from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2)) //second from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(3)) //third from config (global)                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics_and_globals,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerFour' FakeDelegatingHandlerThree>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0)) //first because global not in config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1)) //first from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2)) //second from config                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(3)) //third from config (global)                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(6))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(2))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(4))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(5))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_and_only_add_specifics_in_config,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(5))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(4))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_and_only_add_specifics_in_config,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(5))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(4))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_and_only_add_specifics_in_config,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(5))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(4))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_order_and_only_add_specifics_in_config,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandlerThree' FakeDelegatingHandlerFour>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(5))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerThree>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerFour>(1))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(3))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(4))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_dont_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(3))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_dont_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(3))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_follow_ordering_dont_add_specifics,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<FakeQoSHandler>(3))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_apply_re_route_specific,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(2))                  .And(x => ThenTheDelegatesAreAddedCorrectly())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_all_from_all_routes_provider_and_qos,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(3))                  .And(x => ThenTheDelegatesAreAddedCorrectly())                  .And(x => ThenItIsQosHandler(2))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_all_from_all_routes_provider_and_qos,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturns(new FakeQoSHandler()))                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(3))                  .And(x => ThenTheDelegatesAreAddedCorrectly())                  .And(x => ThenItIsQosHandler(2))                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_error,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsError())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_error,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsError())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_error,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsError())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_null,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsNull())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_null,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsNull())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,should_log_error_and_return_no_qos_provider_delegate_when_qos_factory_returns_null,The following statement contains a magic number: this.Given(x => GivenTheFollowingRequest(route))                  .And(x => GivenTheQosFactoryReturnsNull())                  .And(x => GivenTheTracingFactoryReturns())                  .And(x => GivenTheServiceProviderReturnsGlobalDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .And(x => GivenTheServiceProviderReturnsSpecificDelegatingHandlers<FakeDelegatingHandler' FakeDelegatingHandlerTwo>())                  .When(x => WhenIGet())                  .Then(x => ThenThereIsDelegatesInProvider(4))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandler>(0))                  .And(x => ThenHandlerAtPositionIs<FakeDelegatingHandlerTwo>(1))                  .And(x => ThenHandlerAtPositionIs<FakeTracingHandler>(2))                  .And(x => ThenHandlerAtPositionIs<NoQosDelegatingHandler>(3))                  .And(_ => ThenTheWarningIsLogged())                  .BDDfy();
Magic Number,Ocelot.UnitTests.Requester,DelegatingHandlerHandlerProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\DelegatingHandlerHandlerProviderFactoryTests.cs,ThenTheDelegatesAreAddedCorrectly,The following statement contains a magic number: handlerTwo.Order.ShouldBe(2);
Magic Number,Ocelot.UnitTests.Requester,FakeDelegatingHandlerThree,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\FakeDelegatingHandler.cs,FakeDelegatingHandlerThree,The following statement contains a magic number: Order = 3;
Magic Number,Ocelot.UnitTests.Requester,FakeDelegatingHandlerFour,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\FakeDelegatingHandler.cs,FakeDelegatingHandlerFour,The following statement contains a magic number: Order = 4;
Magic Number,Ocelot.UnitTests.Requester,FakeDelegatingHandlerTwo,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\FakeDelegatingHandler.cs,FakeDelegatingHandlerTwo,The following statement contains a magic number: Order = 2;
Magic Number,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,GivenADownstreamService,The following statement contains a magic number: _host = new WebHostBuilder()                 .UseUrls("http://localhost:5003")                 .UseKestrel()                 .UseContentRoot(Directory.GetCurrentDirectory())                 .UseIISIntegration()                 .Configure(app =>                 {                     app.Run(context =>                     {                         if (_count == 0)                         {                             context.Response.Cookies.Append("test"' "0");                             context.Response.StatusCode = 200;                             _count++;                             return Task.CompletedTask;                         }                          if (_count == 1)                         {                             if (context.Request.Cookies.TryGetValue("test"' out var cookieValue) || context.Request.Headers.TryGetValue("Set-Cookie"' out var headerValue))                             {                                 context.Response.StatusCode = 200;                                 return Task.CompletedTask;                             }                              context.Response.StatusCode = 500;                         }                          return Task.CompletedTask;                     });                 })                 .Build();
Magic Number,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,GivenADownstreamService,The following statement contains a magic number: _host = new WebHostBuilder()                 .UseUrls("http://localhost:5003")                 .UseKestrel()                 .UseContentRoot(Directory.GetCurrentDirectory())                 .UseIISIntegration()                 .Configure(app =>                 {                     app.Run(context =>                     {                         if (_count == 0)                         {                             context.Response.Cookies.Append("test"' "0");                             context.Response.StatusCode = 200;                             _count++;                             return Task.CompletedTask;                         }                          if (_count == 1)                         {                             if (context.Request.Cookies.TryGetValue("test"' out var cookieValue) || context.Request.Headers.TryGetValue("Set-Cookie"' out var headerValue))                             {                                 context.Response.StatusCode = 200;                                 return Task.CompletedTask;                             }                              context.Response.StatusCode = 500;                         }                          return Task.CompletedTask;                     });                 })                 .Build();
Magic Number,Ocelot.UnitTests.Requester,HttpClientBuilderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientBuilderTests.cs,GivenADownstreamService,The following statement contains a magic number: _host = new WebHostBuilder()                 .UseUrls("http://localhost:5003")                 .UseKestrel()                 .UseContentRoot(Directory.GetCurrentDirectory())                 .UseIISIntegration()                 .Configure(app =>                 {                     app.Run(context =>                     {                         if (_count == 0)                         {                             context.Response.Cookies.Append("test"' "0");                             context.Response.StatusCode = 200;                             _count++;                             return Task.CompletedTask;                         }                          if (_count == 1)                         {                             if (context.Request.Cookies.TryGetValue("test"' out var cookieValue) || context.Request.Headers.TryGetValue("Set-Cookie"' out var headerValue))                             {                                 context.Response.StatusCode = 200;                                 return Task.CompletedTask;                             }                              context.Response.StatusCode = 500;                         }                          return Task.CompletedTask;                     });                 })                 .Build();
Magic Number,Ocelot.UnitTests.Requester,TimeoutDelegatingHandler,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Requester\HttpClientHttpRequesterTest.cs,SendAsync,The following statement contains a magic number: await Task.Delay(100000' cancellationToken);
Magic Number,Ocelot.UnitTests.Request.Mapper,RequestMapperTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Request\Mapper\RequestMapperTests.cs,ThenTheMappedRequestHasContentRangeHeader,The following statement contains a magic number: _mappedRequest.Data.Content.Headers.ContentRange.To.ShouldBe(2);
Magic Number,Ocelot.UnitTests.Responder,ErrorsToHttpStatusCodeMapperTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Responder\ErrorsToHttpStatusCodeMapperTests.cs,check_we_have_considered_all_errors_in_these_tests,The following statement contains a magic number: Enum.GetNames(typeof(OcelotErrorCode)).Length.ShouldBe(41' "Looks like the number of error codes has changed. Do you need to modify ErrorsToHttpStatusCodeMapper?");
Magic Number,Ocelot.UnitTests.Responder,HttpContextResponderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\Responder\HttpContextResponderTests.cs,should_call_without_exception,The following statement contains a magic number: _responder.SetErrorResponseOnContext(httpContext' 500);
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ConfigurationServiceProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ConfigurationServiceProviderTests.cs,should_return_services,The following statement contains a magic number: var hostAndPort = new ServiceHostAndPort("127.0.0.1"' 80);
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ServiceDiscoveryProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ServiceDiscoveryProviderFactoryTests.cs,should_return_list_of_configuration_services,The following statement contains a magic number: var downstreamAddresses = new List<DownstreamHostAndPort>()              {                  new DownstreamHostAndPort("asdf.com"' 80)'                  new DownstreamHostAndPort("abc.com"' 80)              };
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ServiceDiscoveryProviderFactoryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ServiceDiscoveryProviderFactoryTests.cs,should_return_list_of_configuration_services,The following statement contains a magic number: var downstreamAddresses = new List<DownstreamHostAndPort>()              {                  new DownstreamHostAndPort("asdf.com"' 80)'                  new DownstreamHostAndPort("abc.com"' 80)              };
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ServiceFabricServiceDiscoveryProviderTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ServiceFabricServiceDiscoveryProviderTests.cs,GivenTheFollowing,The following statement contains a magic number: _port = 19081;
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ServiceRegistryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ServiceRegistryTests.cs,should_register_service,The following statement contains a magic number: this.Given(x => x.GivenAServiceToRegister("product"' "localhost:5000"' 80))              .When(x => x.WhenIRegisterTheService())              .Then(x => x.ThenTheServiceIsRegistered())              .BDDfy();
Magic Number,Ocelot.UnitTests.ServiceDiscovery,ServiceRegistryTests,C:\Users\victo\Downloads\Ocelot-develop\Ocelot-develop\test\Ocelot.UnitTests\ServiceDiscovery\ServiceRegistryTests.cs,should_lookup_service,The following statement contains a magic number: this.Given(x => x.GivenAServiceIsRegistered("product"' "localhost:600"' 80))              .When(x => x.WhenILookupTheService("product"))              .Then(x => x.ThenTheServiceDetailsAreReturned())              .BDDfy();
