Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The method has 131 lines of code.
Long Method,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The method has 293 lines of code.
Long Method,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The method has 293 lines of code.
Long Statement,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The length of the statement  "                    b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>" is 124.
Long Statement,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The length of the statement  "                    b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>" is 126.
Long Statement,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The length of the statement  "                    b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>" is 124.
Long Statement,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The length of the statement  "                    b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>" is 126.
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Customers"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Name = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Email = table.Column<string>(type: "nvarchar(255)"' maxLength: 255' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Customers"' x => x.Id);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Customers"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Name = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Email = table.Column<string>(type: "nvarchar(255)"' maxLength: 255' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Customers"' x => x.Id);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Products"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Name = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Price = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Products"' x => x.Id);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(                 name: "Orders"'                 columns: table => new                 {                     Id = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     CustomerId = table.Column<Guid>(type: "uniqueidentifier"' nullable: false)'                     Status = table.Column<string>(type: "nvarchar(max)"' nullable: false' defaultValue: "Draft")'                     TotalPrice = table.Column<decimal>(type: "decimal(18'2)"' nullable: false)'                     BillingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     BillingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     BillingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     BillingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     OrderName = table.Column<string>(type: "nvarchar(100)"' maxLength: 100' nullable: false)'                     Payment_CVV = table.Column<string>(type: "nvarchar(3)"' maxLength: 3' nullable: false)'                     Payment_CardName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     Payment_CardNumber = table.Column<string>(type: "nvarchar(24)"' maxLength: 24' nullable: false)'                     Payment_Expiration = table.Column<string>(type: "nvarchar(10)"' maxLength: 10' nullable: false)'                     Payment_PaymentMethod = table.Column<int>(type: "int"' nullable: false)'                     ShippingAddress_AddressLine = table.Column<string>(type: "nvarchar(180)"' maxLength: 180' nullable: false)'                     ShippingAddress_Country = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_EmailAddress = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: true)'                     ShippingAddress_FirstName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_LastName = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_State = table.Column<string>(type: "nvarchar(50)"' maxLength: 50' nullable: false)'                     ShippingAddress_ZipCode = table.Column<string>(type: "nvarchar(5)"' maxLength: 5' nullable: false)'                     CreatedAt = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     CreatedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)'                     LastModified = table.Column<DateTime>(type: "datetime2"' nullable: true)'                     LastModifiedBy = table.Column<string>(type: "nvarchar(max)"' nullable: true)                 }'                 constraints: table =>                 {                     table.PrimaryKey("PK_Orders"' x => x.Id);                     table.ForeignKey(                         name: "FK_Orders_Customers_CustomerId"'                         column: x => x.CustomerId'                         principalTable: "Customers"'                         principalColumn: "Id"'                         onDelete: ReferentialAction.Cascade);                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder                 .HasAnnotation("ProductVersion"' "8.0.2")                 .HasAnnotation("Relational:MaxIdentifierLength"' 128);
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Customer"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Email")                         .IsRequired()                         .HasMaxLength(255)                         .HasColumnType("nvarchar(255)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.HasKey("Id");                      b.HasIndex("Email")                         .IsUnique();                      b.ToTable("Customers");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Customer"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Email")                         .IsRequired()                         .HasMaxLength(255)                         .HasColumnType("nvarchar(255)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.HasKey("Id");                      b.HasIndex("Email")                         .IsUnique();                      b.ToTable("Customers");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Product"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.Property<decimal>("Price")                         .HasColumnType("decimal(18'2)");                      b.HasKey("Id");                      b.ToTable("Products");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder                 .HasAnnotation("ProductVersion"' "8.0.2")                 .HasAnnotation("Relational:MaxIdentifierLength"' 128);
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Customer"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Email")                         .IsRequired()                         .HasMaxLength(255)                         .HasColumnType("nvarchar(255)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.HasKey("Id");                      b.HasIndex("Email")                         .IsUnique();                      b.ToTable("Customers");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Customer"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Email")                         .IsRequired()                         .HasMaxLength(255)                         .HasColumnType("nvarchar(255)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.HasKey("Id");                      b.HasIndex("Email")                         .IsUnique();                      b.ToTable("Customers");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Order"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<Guid>("CustomerId")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Status")                         .IsRequired()                         .ValueGeneratedOnAdd()                         .HasColumnType("nvarchar(max)")                         .HasDefaultValue("Draft");                      b.Property<decimal>("TotalPrice")                         .HasColumnType("decimal(18'2)");                      b.ComplexProperty<Dictionary<string' object>>("BillingAddress"' "Ordering.Domain.Models.Order.BillingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.ComplexProperty<Dictionary<string' object>>("OrderName"' "Ordering.Domain.Models.Order.OrderName#OrderName"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("Value")                                 .IsRequired()                                 .HasMaxLength(100)                                 .HasColumnType("nvarchar(100)")                                 .HasColumnName("OrderName");                         });                      b.ComplexProperty<Dictionary<string' object>>("Payment"' "Ordering.Domain.Models.Order.Payment#Payment"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("CVV")                                 .IsRequired()                                 .HasMaxLength(3)                                 .HasColumnType("nvarchar(3)");                              b1.Property<string>("CardName")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("CardNumber")                                 .IsRequired()                                 .HasMaxLength(24)                                 .HasColumnType("nvarchar(24)");                              b1.Property<string>("Expiration")                                 .IsRequired()                                 .HasMaxLength(10)                                 .HasColumnType("nvarchar(10)");                              b1.Property<int>("PaymentMethod")                                 .HasColumnType("int");                         });                      b.ComplexProperty<Dictionary<string' object>>("ShippingAddress"' "Ordering.Domain.Models.Order.ShippingAddress#Address"' b1 =>                         {                             b1.IsRequired();                              b1.Property<string>("AddressLine")                                 .IsRequired()                                 .HasMaxLength(180)                                 .HasColumnType("nvarchar(180)");                              b1.Property<string>("Country")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("EmailAddress")                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("FirstName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("LastName")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("State")                                 .IsRequired()                                 .HasMaxLength(50)                                 .HasColumnType("nvarchar(50)");                              b1.Property<string>("ZipCode")                                 .IsRequired()                                 .HasMaxLength(5)                                 .HasColumnType("nvarchar(5)");                         });                      b.HasKey("Id");                      b.HasIndex("CustomerId");                      b.ToTable("Orders");                 });
Magic Number,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Ordering.Domain.Models.Product"' b =>                 {                     b.Property<Guid>("Id")                         .HasColumnType("uniqueidentifier");                      b.Property<DateTime?>("CreatedAt")                         .HasColumnType("datetime2");                      b.Property<string>("CreatedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<DateTime?>("LastModified")                         .HasColumnType("datetime2");                      b.Property<string>("LastModifiedBy")                         .HasColumnType("nvarchar(max)");                      b.Property<string>("Name")                         .IsRequired()                         .HasMaxLength(100)                         .HasColumnType("nvarchar(100)");                      b.Property<decimal>("Price")                         .HasColumnType("decimal(18'2)");                      b.HasKey("Id");                      b.ToTable("Products");                 });
Duplicate Code,Ordering.Infrastructure.Data.Migrations,InitialCreate,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\20240216090112_InitialCreate.cs,BuildTargetModel,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 111)' (151' 188))
Duplicate Code,Ordering.Infrastructure.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\run-aspnetcore-microservices-master\run-aspnetcore-microservices-master\src\Services\Ordering\Ordering.Infrastructure\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The method contains a code clone-set at the following line numbers (starting from the method definition): ((74' 111)' (151' 188))
