Implementation smell,Namespace,Class,File,Method,Description
Long Method,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The method has 185 lines of code.
Long Method,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The method has 259 lines of code.
Long Method,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The method has 259 lines of code.
Complex Method,IdentityServer,AccountController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountController.cs,Login,Cyclomatic complexity of the method is 11
Long Parameter List,IdentityServer,AccountController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountController.cs,AccountController,The method has 5 parameters. Parameters: interaction' clientStore' schemeProvider' events' users
Long Parameter List,IdentityServer,ExternalController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\ExternalController.cs,ExternalController,The method has 5 parameters. Parameters: interaction' clientStore' events' logger' users
Long Parameter List,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,ConsentController,The method has 5 parameters. Parameters: interaction' clientStore' resourceStore' events' logger
Long Parameter List,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,CreateConsentViewModel,The method has 5 parameters. Parameters: model' returnUrl' request' client' resources
Long Parameter List,IdentityServer.Device,DeviceController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Device\DeviceController.cs,DeviceController,The method has 5 parameters. Parameters: interaction' clientStore' resourceStore' eventService' logger
Long Identifier,IdentityServer,AccountOptions,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountOptions.cs,,The length of the parameter WindowsAuthenticationSchemeName is 31.
Long Identifier,IdentityServer,AccountOptions,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountOptions.cs,,The length of the parameter InvalidCredentialsErrorMessage is 30.
Long Statement,IdentityServer.Areas.Identity.Pages.Account,ExternalLoginModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\ExternalLogin.cshtml.cs,OnGetCallbackAsync,The length of the statement  "            var result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider' info.ProviderKey' isPersistent: false' bypassTwoFactor : true);" is 142.
Long Statement,IdentityServer.Areas.Identity.Pages.Account,ExternalLoginModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\ExternalLogin.cshtml.cs,OnGetCallbackAsync,The length of the statement  "                _logger.LogInformation("{Name} logged in with {LoginProvider} provider."' info.Principal.Identity.Name' info.LoginProvider);" is 124.
Long Statement,IdentityServer.Areas.Identity.Pages.Account,LoginModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Login.cshtml.cs,OnPostAsync,The length of the statement  "                var result = await _signInManager.PasswordSignInAsync(Input.Email' Input.Password' Input.RememberMe' lockoutOnFailure: false);" is 126.
Long Statement,IdentityServer.Areas.Identity.Pages.Account,LoginWith2faModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\LoginWith2fa.cshtml.cs,OnPostAsync,The length of the statement  "            var result = await _signInManager.TwoFactorAuthenticatorSignInAsync(authenticatorCode' rememberMe' Input.RememberMachine);" is 122.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,Disable2faModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\Disable2fa.cshtml.cs,OnGet,The length of the statement  "                throw new InvalidOperationException($"Cannot disable 2FA for user with ID '{_userManager.GetUserId(User)}' as it's not currently enabled.");" is 140.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,Disable2faModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\Disable2fa.cshtml.cs,OnPostAsync,The length of the statement  "                throw new InvalidOperationException($"Unexpected error occurred disabling 2FA for user with ID '{_userManager.GetUserId(User)}'.");" is 131.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,ExternalLoginsModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\ExternalLogins.cshtml.cs,OnPostLinkLoginAsync,The length of the statement  "            var properties = _signInManager.ConfigureExternalAuthenticationProperties(provider' redirectUrl'  _userManager.GetUserId(User));" is 128.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,ExternalLoginsModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\ExternalLogins.cshtml.cs,OnGetLinkLoginCallbackAsync,The length of the statement  "                throw new InvalidOperationException($"Unexpected error occurred loading external login info for user with ID '{user.Id}'.");" is 124.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,GenerateRecoveryCodesModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\GenerateRecoveryCodes.cshtml.cs,OnGetAsync,The length of the statement  "                throw new InvalidOperationException($"Cannot generate recovery codes for user with ID '{userId}' because they do not have 2FA enabled.");" is 137.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,GenerateRecoveryCodesModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\GenerateRecoveryCodes.cshtml.cs,OnPostAsync,The length of the statement  "                throw new InvalidOperationException($"Cannot generate recovery codes for user with ID '{userId}' as they do not have 2FA enabled.");" is 132.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,ResetAuthenticatorModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\ResetAuthenticator.cshtml.cs,OnPostAsync,The length of the statement  "            StatusMessage = "Your authenticator app key has been reset' you will need to configure your authenticator app using the new key.";" is 130.
Long Statement,IdentityServer.Areas.Identity.Pages.Account.Manage,TwoFactorAuthenticationModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\TwoFactorAuthentication.cshtml.cs,OnPost,The length of the statement  "            StatusMessage = "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.";" is 137.
Long Statement,IdentityServer,Program,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Program.cs,Main,The length of the statement  "                .WriteTo.Console(outputTemplate: "[{Timestamp:HH:mm:ss} {Level}] {SourceContext}{NewLine}{Message:lj}{NewLine}{Exception}{NewLine}"' theme: AnsiConsoleTheme.Code)" is 162.
Long Statement,IdentityServer,AccountController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountController.cs,Login,The length of the statement  "                    await _events.RaiseAsync(new UserLoginSuccessEvent(user.Username' user.SubjectId' user.Username' clientId: context?.ClientId));" is 127.
Long Statement,IdentityServer,AccountController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\AccountController.cs,BuildLoginViewModelAsync,The length of the statement  "                        providers = providers.Where(provider => client.IdentityProviderRestrictions.Contains(provider.AuthenticationScheme)).ToList();" is 126.
Long Statement,IdentityServer,ExternalController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\ExternalController.cs,Callback,The length of the statement  "            var result = await HttpContext.AuthenticateAsync(IdentityServer4.IdentityServerConstants.ExternalCookieAuthenticationScheme);" is 125.
Long Statement,IdentityServer,ExternalController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Account\ExternalController.cs,Callback,The length of the statement  "            await _events.RaiseAsync(new UserLoginSuccessEvent(provider' providerUserId' user.SubjectId' user.Username' true' context?.ClientId));" is 134.
Long Statement,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,ProcessConsent,The length of the statement  "                    await _events.RaiseAsync(new ConsentGrantedEvent(User.GetSubjectId()' request.ClientId' request.ScopesRequested' grantedConsent.ScopesConsented' grantedConsent.RememberConsent));" is 178.
Long Statement,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,CreateConsentViewModel,The length of the statement  "            vm.IdentityScopes = resources.IdentityResources.Select(x => CreateScopeViewModel(x' vm.ScopesConsented.Contains(x.Name) || model == null)).ToArray();" is 149.
Long Statement,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,CreateConsentViewModel,The length of the statement  "            vm.ResourceScopes = resources.ApiResources.SelectMany(x => x.Scopes).Select(x => CreateScopeViewModel(x' vm.ScopesConsented.Contains(x.Name) || model == null)).ToArray();" is 170.
Long Statement,IdentityServer,ConsentController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Consent\ConsentController.cs,CreateConsentViewModel,The length of the statement  "                    GetOfflineAccessScope(vm.ScopesConsented.Contains(IdentityServer4.IdentityServerConstants.StandardScopes.OfflineAccess) || model == null)" is 137.
Long Statement,IdentityServer,SecurityHeadersAttribute,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\SecurityHeadersAttribute.cs,OnResultExecuting,The length of the statement  "                var csp = "default-src 'self'; object-src 'none'; frame-ancestors 'none'; sandbox allow-forms allow-same-origin allow-scripts; base-uri 'self';";" is 145.
Long Statement,IdentityServer.Device,DeviceController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Device\DeviceController.cs,ProcessConsent,The length of the statement  "                    await _events.RaiseAsync(new ConsentGrantedEvent(User.GetSubjectId()' request.ClientId' request.ScopesRequested' grantedConsent.ScopesConsented' grantedConsent.RememberConsent));" is 178.
Long Statement,IdentityServer.Device,DeviceController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Device\DeviceController.cs,CreateConsentViewModel,The length of the statement  "            vm.IdentityScopes = resources.IdentityResources.Select(x => CreateScopeViewModel(x' vm.ScopesConsented.Contains(x.Name) || model == null)).ToArray();" is 149.
Long Statement,IdentityServer.Device,DeviceController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Device\DeviceController.cs,CreateConsentViewModel,The length of the statement  "            vm.ResourceScopes = resources.ApiResources.SelectMany(x => x.Scopes).Select(x => CreateScopeViewModel(x' vm.ScopesConsented.Contains(x.Name) || model == null)).ToArray();" is 170.
Long Statement,IdentityServer.Device,DeviceController,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Device\DeviceController.cs,CreateConsentViewModel,The length of the statement  "                    GetOfflineAccessScope(vm.ScopesConsented.Contains(IdentityServer4.IdentityServerConstants.StandardScopes.OfflineAccess) || model == null)" is 137.
Magic Number,IdentityServer.Areas.Identity.Pages.Account.Manage,EnableAuthenticatorModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\EnableAuthenticator.cshtml.cs,OnPostAsync,The following statement contains a magic number: var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user' 10);
Magic Number,IdentityServer.Areas.Identity.Pages.Account.Manage,EnableAuthenticatorModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\EnableAuthenticator.cshtml.cs,FormatKey,The following statement contains a magic number: result.Append(unformattedKey.Substring(currentPosition' 4)).Append(" ");
Magic Number,IdentityServer.Areas.Identity.Pages.Account.Manage,EnableAuthenticatorModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\EnableAuthenticator.cshtml.cs,FormatKey,The following statement contains a magic number: currentPosition += 4;
Magic Number,IdentityServer.Areas.Identity.Pages.Account.Manage,EnableAuthenticatorModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\EnableAuthenticator.cshtml.cs,FormatKey,The following statement contains a magic number: currentPosition + 4 < unformattedKey.Length
Magic Number,IdentityServer.Areas.Identity.Pages.Account.Manage,GenerateRecoveryCodesModel,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Areas\Identity\Pages\Account\Manage\GenerateRecoveryCodes.cshtml.cs,OnPostAsync,The following statement contains a magic number: var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user' 10);
Magic Number,IdentityServer,Extensions,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Quickstart\Extensions.cs,LoadingPage,The following statement contains a magic number: controller.HttpContext.Response.StatusCode = 200;
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetRoles"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             Name = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedName = table.Column<string>(maxLength: 256' nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetRoles"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetRoles"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             Name = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedName = table.Column<string>(maxLength: 256' nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetRoles"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUsers"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             UserName = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedUserName = table.Column<string>(maxLength: 256' nullable: true)'             Email = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedEmail = table.Column<string>(maxLength: 256' nullable: true)'             EmailConfirmed = table.Column<bool>(nullable: false)'             PasswordHash = table.Column<string>(nullable: true)'             SecurityStamp = table.Column<string>(nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)'             PhoneNumber = table.Column<string>(nullable: true)'             PhoneNumberConfirmed = table.Column<bool>(nullable: false)'             TwoFactorEnabled = table.Column<bool>(nullable: false)'             LockoutEnd = table.Column<DateTimeOffset>(nullable: true)'             LockoutEnabled = table.Column<bool>(nullable: false)'             AccessFailedCount = table.Column<int>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUsers"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUsers"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             UserName = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedUserName = table.Column<string>(maxLength: 256' nullable: true)'             Email = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedEmail = table.Column<string>(maxLength: 256' nullable: true)'             EmailConfirmed = table.Column<bool>(nullable: false)'             PasswordHash = table.Column<string>(nullable: true)'             SecurityStamp = table.Column<string>(nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)'             PhoneNumber = table.Column<string>(nullable: true)'             PhoneNumberConfirmed = table.Column<bool>(nullable: false)'             TwoFactorEnabled = table.Column<bool>(nullable: false)'             LockoutEnd = table.Column<DateTimeOffset>(nullable: true)'             LockoutEnabled = table.Column<bool>(nullable: false)'             AccessFailedCount = table.Column<int>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUsers"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUsers"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             UserName = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedUserName = table.Column<string>(maxLength: 256' nullable: true)'             Email = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedEmail = table.Column<string>(maxLength: 256' nullable: true)'             EmailConfirmed = table.Column<bool>(nullable: false)'             PasswordHash = table.Column<string>(nullable: true)'             SecurityStamp = table.Column<string>(nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)'             PhoneNumber = table.Column<string>(nullable: true)'             PhoneNumberConfirmed = table.Column<bool>(nullable: false)'             TwoFactorEnabled = table.Column<bool>(nullable: false)'             LockoutEnd = table.Column<DateTimeOffset>(nullable: true)'             LockoutEnabled = table.Column<bool>(nullable: false)'             AccessFailedCount = table.Column<int>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUsers"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUsers"'           columns: table => new           {             Id = table.Column<string>(nullable: false)'             UserName = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedUserName = table.Column<string>(maxLength: 256' nullable: true)'             Email = table.Column<string>(maxLength: 256' nullable: true)'             NormalizedEmail = table.Column<string>(maxLength: 256' nullable: true)'             EmailConfirmed = table.Column<bool>(nullable: false)'             PasswordHash = table.Column<string>(nullable: true)'             SecurityStamp = table.Column<string>(nullable: true)'             ConcurrencyStamp = table.Column<string>(nullable: true)'             PhoneNumber = table.Column<string>(nullable: true)'             PhoneNumberConfirmed = table.Column<bool>(nullable: false)'             TwoFactorEnabled = table.Column<bool>(nullable: false)'             LockoutEnd = table.Column<DateTimeOffset>(nullable: true)'             LockoutEnabled = table.Column<bool>(nullable: false)'             AccessFailedCount = table.Column<int>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUsers"' x => x.Id);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUserLogins"'           columns: table => new           {             LoginProvider = table.Column<string>(maxLength: 128' nullable: false)'             ProviderKey = table.Column<string>(maxLength: 128' nullable: false)'             ProviderDisplayName = table.Column<string>(nullable: true)'             UserId = table.Column<string>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUserLogins"' x => new { x.LoginProvider' x.ProviderKey });             table.ForeignKey(                       name: "FK_AspNetUserLogins_AspNetUsers_UserId"'                       column: x => x.UserId'                       principalTable: "AspNetUsers"'                       principalColumn: "Id"'                       onDelete: ReferentialAction.Cascade);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUserLogins"'           columns: table => new           {             LoginProvider = table.Column<string>(maxLength: 128' nullable: false)'             ProviderKey = table.Column<string>(maxLength: 128' nullable: false)'             ProviderDisplayName = table.Column<string>(nullable: true)'             UserId = table.Column<string>(nullable: false)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUserLogins"' x => new { x.LoginProvider' x.ProviderKey });             table.ForeignKey(                       name: "FK_AspNetUserLogins_AspNetUsers_UserId"'                       column: x => x.UserId'                       principalTable: "AspNetUsers"'                       principalColumn: "Id"'                       onDelete: ReferentialAction.Cascade);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUserTokens"'           columns: table => new           {             UserId = table.Column<string>(nullable: false)'             LoginProvider = table.Column<string>(maxLength: 128' nullable: false)'             Name = table.Column<string>(maxLength: 128' nullable: false)'             Value = table.Column<string>(nullable: true)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUserTokens"' x => new { x.UserId' x.LoginProvider' x.Name });             table.ForeignKey(                       name: "FK_AspNetUserTokens_AspNetUsers_UserId"'                       column: x => x.UserId'                       principalTable: "AspNetUsers"'                       principalColumn: "Id"'                       onDelete: ReferentialAction.Cascade);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,Up,The following statement contains a magic number: migrationBuilder.CreateTable(           name: "AspNetUserTokens"'           columns: table => new           {             UserId = table.Column<string>(nullable: false)'             LoginProvider = table.Column<string>(maxLength: 128' nullable: false)'             Name = table.Column<string>(maxLength: 128' nullable: false)'             Value = table.Column<string>(nullable: true)           }'           constraints: table =>           {             table.PrimaryKey("PK_AspNetUserTokens"' x => new { x.UserId' x.LoginProvider' x.Name });             table.ForeignKey(                       name: "FK_AspNetUserTokens_AspNetUsers_UserId"'                       column: x => x.UserId'                       principalTable: "AspNetUsers"'                       principalColumn: "Id"'                       onDelete: ReferentialAction.Cascade);           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder           .HasAnnotation("ProductVersion"' "3.0.0")           .HasAnnotation("Relational:MaxIdentifierLength"' 128)           .HasAnnotation("SqlServer:ValueGenerationStrategy"' SqlServerValueGenerationStrategy.IdentityColumn);
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Name")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedName")                       .IsUnique()                       .HasName("RoleNameIndex")                       .HasFilter("[NormalizedName] IS NOT NULL");              b.ToTable("AspNetRoles");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Name")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedName")                       .IsUnique()                       .HasName("RoleNameIndex")                       .HasFilter("[NormalizedName] IS NOT NULL");              b.ToTable("AspNetRoles");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>"' b =>           {             b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderKey")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderDisplayName")                       .HasColumnType("nvarchar(max)");              b.Property<string>("UserId")                       .IsRequired()                       .HasColumnType("nvarchar(450)");              b.HasKey("LoginProvider"' "ProviderKey");              b.HasIndex("UserId");              b.ToTable("AspNetUserLogins");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>"' b =>           {             b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderKey")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderDisplayName")                       .HasColumnType("nvarchar(max)");              b.Property<string>("UserId")                       .IsRequired()                       .HasColumnType("nvarchar(450)");              b.HasKey("LoginProvider"' "ProviderKey");              b.HasIndex("UserId");              b.ToTable("AspNetUserLogins");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>"' b =>           {             b.Property<string>("UserId")                       .HasColumnType("nvarchar(450)");              b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Name")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Value")                       .HasColumnType("nvarchar(max)");              b.HasKey("UserId"' "LoginProvider"' "Name");              b.ToTable("AspNetUserTokens");           });
Magic Number,IdentityServer.Data.Migrations,CreateIdentitySchema,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\00000000000000_CreateIdentitySchema.cs,BuildTargetModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>"' b =>           {             b.Property<string>("UserId")                       .HasColumnType("nvarchar(450)");              b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Name")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Value")                       .HasColumnType("nvarchar(max)");              b.HasKey("UserId"' "LoginProvider"' "Name");              b.ToTable("AspNetUserTokens");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder           .HasAnnotation("ProductVersion"' "3.0.0")           .HasAnnotation("Relational:MaxIdentifierLength"' 128)           .HasAnnotation("SqlServer:ValueGenerationStrategy"' SqlServerValueGenerationStrategy.IdentityColumn);
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Name")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedName")                       .IsUnique()                       .HasName("RoleNameIndex")                       .HasFilter("[NormalizedName] IS NOT NULL");              b.ToTable("AspNetRoles");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Name")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedName")                       .IsUnique()                       .HasName("RoleNameIndex")                       .HasFilter("[NormalizedName] IS NOT NULL");              b.ToTable("AspNetRoles");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser"' b =>           {             b.Property<string>("Id")                       .HasColumnType("nvarchar(450)");              b.Property<int>("AccessFailedCount")                       .HasColumnType("int");              b.Property<string>("ConcurrencyStamp")                       .IsConcurrencyToken()                       .HasColumnType("nvarchar(max)");              b.Property<string>("Email")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<bool>("EmailConfirmed")                       .HasColumnType("bit");              b.Property<bool>("LockoutEnabled")                       .HasColumnType("bit");              b.Property<DateTimeOffset?>("LockoutEnd")                       .HasColumnType("datetimeoffset");              b.Property<string>("NormalizedEmail")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("NormalizedUserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.Property<string>("PasswordHash")                       .HasColumnType("nvarchar(max)");              b.Property<string>("PhoneNumber")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("PhoneNumberConfirmed")                       .HasColumnType("bit");              b.Property<string>("SecurityStamp")                       .HasColumnType("nvarchar(max)");              b.Property<bool>("TwoFactorEnabled")                       .HasColumnType("bit");              b.Property<string>("UserName")                       .HasColumnType("nvarchar(256)")                       .HasMaxLength(256);              b.HasKey("Id");              b.HasIndex("NormalizedEmail")                       .HasName("EmailIndex");              b.HasIndex("NormalizedUserName")                       .IsUnique()                       .HasName("UserNameIndex")                       .HasFilter("[NormalizedUserName] IS NOT NULL");              b.ToTable("AspNetUsers");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>"' b =>           {             b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderKey")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderDisplayName")                       .HasColumnType("nvarchar(max)");              b.Property<string>("UserId")                       .IsRequired()                       .HasColumnType("nvarchar(450)");              b.HasKey("LoginProvider"' "ProviderKey");              b.HasIndex("UserId");              b.ToTable("AspNetUserLogins");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>"' b =>           {             b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderKey")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("ProviderDisplayName")                       .HasColumnType("nvarchar(max)");              b.Property<string>("UserId")                       .IsRequired()                       .HasColumnType("nvarchar(450)");              b.HasKey("LoginProvider"' "ProviderKey");              b.HasIndex("UserId");              b.ToTable("AspNetUserLogins");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>"' b =>           {             b.Property<string>("UserId")                       .HasColumnType("nvarchar(450)");              b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Name")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Value")                       .HasColumnType("nvarchar(max)");              b.HasKey("UserId"' "LoginProvider"' "Name");              b.ToTable("AspNetUserTokens");           });
Magic Number,IdentityServer.Data.Migrations,ApplicationDbContextModelSnapshot,C:\Users\victo\Downloads\PROYECTOS_ACTUALIZADOS\ModernArchitectureShop-master\ModernArchitectureShop-master\src\Identity\Data\Migrations\ApplicationDbContextModelSnapshot.cs,BuildModel,The following statement contains a magic number: modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>"' b =>           {             b.Property<string>("UserId")                       .HasColumnType("nvarchar(450)");              b.Property<string>("LoginProvider")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Name")                       .HasColumnType("nvarchar(128)")                       .HasMaxLength(128);              b.Property<string>("Value")                       .HasColumnType("nvarchar(max)");              b.HasKey("UserId"' "LoginProvider"' "Name");              b.ToTable("AspNetUserTokens");           });
